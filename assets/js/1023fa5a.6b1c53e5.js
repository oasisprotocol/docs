"use strict";(globalThis.webpackChunkdocs_oasis_io=globalThis.webpackChunkdocs_oasis_io||[]).push([[9548],{17462:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"build/tools/build-paratime/reproducibility","title":"Reproducibility","description":"If you wish to build paratime binaries yourself, you can use the","source":"@site/docs/build/tools/build-paratime/reproducibility.md","sourceDirName":"build/tools/build-paratime","slug":"/build/tools/build-paratime/reproducibility","permalink":"/build/tools/build-paratime/reproducibility","draft":false,"unlisted":false,"editUrl":"https://github.com/oasisprotocol/oasis-sdk/edit/main/docs/runtime/reproducibility.md","tags":[],"version":"current","lastUpdatedAt":1761867754000,"frontMatter":{"sidebar_custom_props":{}},"sidebar":"developers","previous":{"title":"Modules","permalink":"/build/tools/build-paratime/modules"},"next":{"title":"Consensus Layer and Other ParaTimes","permalink":"/build/tools/other-paratimes/"}}');var t=i(74848),a=i(28453);const r={sidebar_custom_props:{tags:void 0}},o="Reproducibility",l={},d=[{value:"Environment Setup",id:"environment-setup",level:2},{value:"Running the Image",id:"running-the-image",level:2},{value:"Building",id:"building",level:2},{value:"ELF",id:"elf",level:3},{value:"Intel SGX",id:"intel-sgx",level:3},{value:"Generating Bundles",id:"generating-bundles",level:2},{value:"Multi-step SGX Signing Example",id:"multi-step-sgx-signing-example",level:3},{value:"Generate a key",id:"generate-a-key",level:4},{value:"Generate signing data for your enclave",id:"generate-signing-data-for-your-enclave",level:4},{value:"Sign the SIGSTRUCT hash",id:"sign-the-sigstruct-hash",level:5},{value:"Attach the singed SIGSTRUCT to the bundle",id:"attach-the-singed-sigstruct-to-the-bundle",level:5}];function c(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"reproducibility",children:"Reproducibility"})}),"\n",(0,t.jsx)(n.p,{children:"If you wish to build paratime binaries yourself, you can use the\nenvironment provided as part of the SDK. This way you can also verify\nthat the binaries match the ones running on the network."}),"\n",(0,t.jsxs)(n.p,{children:["The steps below show how to build the test runtimes provided in the\n",(0,t.jsx)(n.code,{children:"oasis-sdk"})," sources; steps for other paratimes should be similar."]}),"\n",(0,t.jsx)(n.h2,{id:"environment-setup",children:"Environment Setup"}),"\n",(0,t.jsx)(n.p,{children:"The build environment is provided as a Docker image containing all the\nnecessary tools. Refer to your system's documentation for pointers on\ninstalling software."}),"\n",(0,t.jsx)(n.p,{children:"The runtime sources need to be mounted into the container so prepare a\ndirectory first, such as:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/oasisprotocol/oasis-sdk.git\n"})}),"\n",(0,t.jsx)(n.h2,{id:"running-the-image",children:"Running the Image"}),"\n",(0,t.jsxs)(n.p,{children:["The images are available in the ",(0,t.jsx)(n.code,{children:"ghcr.io/oasisprotocol/runtime-builder"}),"\nrepository on Docker Hub and are tagged with the same version numbers as\nreleases of the SDK. To pull the image and run a container with it, run\nthe following:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"docker run -t -i -v /home/user/oasis-sdk:/src ghcr.io/oasisprotocol/runtime-builder:main /bin/bash\n"})}),"\n",(0,t.jsx)(n.p,{children:"where:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"/home/user/oasis-sdk"})," is the absolute path to the directory\ncontaining the SDK sources (or other paratimes - you likely do not need\nto download the SDK separately if you're building other paratimes), and"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"main"})," is a release of the SDK - the documentation of the paratime\nyou're trying to build should mention the version required."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["This gives you a root shell in the container. Rust and Cargo are\ninstalled in ",(0,t.jsx)(n.code,{children:"/cargo"}),", Go in ",(0,t.jsx)(n.code,{children:"/go"}),", and the sources to your paratime are\navailable in ",(0,t.jsx)(n.code,{children:"/src"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"building",children:"Building"}),"\n",(0,t.jsx)(n.h3,{id:"elf",children:"ELF"}),"\n",(0,t.jsx)(n.p,{children:"Simply build the paratime in release mode using:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cargo build --release\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The resulting binaries will be in ",(0,t.jsx)(n.code,{children:"/src/target/release/"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"intel-sgx",children:"Intel SGX"}),"\n",(0,t.jsx)(n.p,{children:"Follow the normal build procedure for your paratime. For the testing\nruntimes in the SDK, e.g.:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd /src\ncargo build --release --target x86_64-fortanix-unknown-sgx\n"})}),"\n",(0,t.jsxs)(n.p,{children:["After this step is complete, the binaries will be in\n",(0,t.jsx)(n.code,{children:"/src/target/x86_64-fortanix-unknown-sgx/release/"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["To produce the sgxs format needed on the Oasis network, change directory\nto where a particular runtime's ",(0,t.jsx)(n.code,{children:"Cargo.toml"})," file is and run the\nfollowing command:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cargo elf2sgxs --release\n"})}),"\n",(0,t.jsx)(n.p,{children:"It is necessary to change directories first because the tool does not\ncurrently support cargo workspaces."}),"\n",(0,t.jsxs)(n.p,{children:["The resulting binaries will have the ",(0,t.jsx)(n.code,{children:".sgxs"})," extension."]}),"\n",(0,t.jsx)(n.h2,{id:"generating-bundles",children:"Generating Bundles"}),"\n",(0,t.jsxs)(n.p,{children:["Oasis Core since version 22.0 distributes bundles in the Oasis Runtime Container\nformat which is basically a zip archive with some metadata attached. This makes\nit easier for node operators to configure paratimes. To ease creation of such\nbundles from built binaries and metadata, you can use the ",(0,t.jsx)(n.code,{children:"orc"})," tool provided by\nthe SDK."]}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsxs)(n.p,{children:["You can install the ",(0,t.jsx)(n.code,{children:"orc"})," utility by running:"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"go install github.com/oasisprotocol/oasis-sdk/tools/orc@latest\n"})})]}),"\n",(0,t.jsx)(n.p,{children:"The same bundle can contain both ELF and Intel SGX artifacts. To create a bundle\nuse the following command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"orc init path/to/elf-binary\n"})}),"\n",(0,t.jsx)(n.p,{children:"When including Intel SGX artifacts you may additionally specify:"}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"All bundles, even Intel SGX ones, are required to include an ELF binary of the\nparatime. This binary is used for client nodes that don't have SGX support."})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"orc init path/to/elf-binary --sgx-executable path/to/binary.sgxs --sgx-signature path/to/binary.sig\n"})}),"\n",(0,t.jsx)(n.p,{children:"You can omit the signature initially and add it later by using:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"orc sgx-set-sig bundle.orc path/to/binary.sig\n"})}),"\n",(0,t.jsx)(n.h3,{id:"multi-step-sgx-signing-example",children:"Multi-step SGX Signing Example"}),"\n",(0,t.jsxs)(n.p,{children:["Multi-step signing allows enclave signing keys to be kept offline, preferrably\nin some HSM. The following example uses ",(0,t.jsx)(n.code,{children:"openssl"})," and a locally generated key as\nan example, however, it is suggested that the key be stored in a more secure\nlocation than in plaintext on disk."]}),"\n",(0,t.jsx)(n.h4,{id:"generate-a-key",children:"Generate a key"}),"\n",(0,t.jsx)(n.p,{children:"We will generate a valid key for enclave signing. This must be a\n3072-bit RSA key with a public exponent of 3. Do this like so:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"openssl genrsa -3 3072 > private.pem\n"})}),"\n",(0,t.jsx)(n.p,{children:"We will also need the public key in a later step so let's also generate this\nnow."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"openssl rsa -in private.pem -pubout > public.pem\n"})}),"\n",(0,t.jsx)(n.h4,{id:"generate-signing-data-for-your-enclave",children:"Generate signing data for your enclave"}),"\n",(0,t.jsxs)(n.p,{children:["Generating signing data is done with the ",(0,t.jsx)(n.code,{children:"orc sgx-gen-sign-data"})," subcommand,\nlike so:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"orc sgx-gen-sign-data [options] bundle.orc\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["See ",(0,t.jsx)(n.code,{children:"orc sgx-gen-sign-data --help"})," for details on available options."]})}),"\n",(0,t.jsxs)(n.p,{children:["For purposes of this example, let's assume your bundle is named ",(0,t.jsx)(n.code,{children:"bundle.orc"}),".\nYou would generate data to sign like so:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"orc sgx-gen-sign-data bundle.orc > sigstruct.sha256.bin\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The output file ",(0,t.jsx)(n.code,{children:"sigstruct.sha256.bin"})," contains the sha256 hash of the\nSIGSTRUCT fields to be signed."]}),"\n",(0,t.jsx)(n.h5,{id:"sign-the-sigstruct-hash",children:"Sign the SIGSTRUCT hash"}),"\n",(0,t.jsxs)(n.p,{children:["To sign the SIGSTRUCT you must create a signature using the ",(0,t.jsx)(n.code,{children:"RSASSA-PKCS1-v1_5"}),"\nscheme. The following command will do so with ",(0,t.jsx)(n.code,{children:"openssl"}),". If you're using an HSM,\nyour device may have a different process for generating a signature of this\ntype."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"openssl pkeyutl -sign \\\n      -in sigstruct.sha256.bin \\\n      -inkey private.pem \\\n      -out sigstruct.sha256.sig \\\n      -pkeyopt digest:sha256\n"})}),"\n",(0,t.jsx)(n.h5,{id:"attach-the-singed-sigstruct-to-the-bundle",children:"Attach the singed SIGSTRUCT to the bundle"}),"\n",(0,t.jsxs)(n.p,{children:["With the signature in ",(0,t.jsx)(n.code,{children:"sigstruct.sha256.sig"})," we can now generate a valid\nSIGSTRUCT and attach it into the bundle."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"orc sgx-set-sig bundle.orc sigstruct.sha256.sig public.pem\n"})}),"\n",(0,t.jsxs)(n.p,{children:["If there are no errors, ",(0,t.jsx)(n.code,{children:"bundle.orc"})," will now contain a valid SGX SIGSTRUCT\nthat was signed by ",(0,t.jsx)(n.code,{children:"private.pem"}),". To verify you can use ",(0,t.jsx)(n.code,{children:"orc show"})," as follows."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"orc show bundle.orc\n"})}),"\n",(0,t.jsx)(n.p,{children:"It should return something like the following, showing the bundle content\nincluding the signed SGX SIGSTRUCT (the signature is also verified):"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Bundle:         /path/to/bundle.orc\nName:           my-paratime\nRuntime ID:     000000000000000000000000000000000000000000000000a6d1e3ebf60dff6c\nVersion:        0.1.1\nExecutable:     runtime.elf\nSGXS:           runtime.sgx\nSGXS MRENCLAVE: a68535bda1574a5e15dfb155c26e39bd404e9991a4d98010581a35d053011340\nSGXS signature: runtime.sgx.sig\nSGXS SIGSTRUCT:\n  Build date:       2022-07-14 00:00:00 +0000 UTC\n  MiscSelect:       00000000\n  MiscSelect mask:  FFFFFFFF\n  Attributes flags: 0000000000000004\n    - 64-bit mode\n  Attributes XFRM:  0000000000000003\n  Attributes mask:  FFFFFFFFFFFFFFFD FFFFFFFFFFFFFFFC\n  MRENCLAVE:        a68535bda1574a5e15dfb155c26e39bd404e9991a4d98010581a35d053011340\n  ISV product ID:   0\n  ISV SVN:          0\nDigests:\n  runtime.sgx.sig => 3c0daea89dfdb3d0381147dec3e041a596617f686afa9b28436ca17980dafee4\n  runtime.elf => a96397fc309bc2116802315c0341a2a9f6f21935d79a3f56d71b3e4d6f6d9302\n  runtime.sgx => b96ff3ae9c73646459b7e8dc1d096838720a7c62707affc1800967cbee99b28b\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var s=i(96540);const t={},a=s.createContext(t);function r(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);