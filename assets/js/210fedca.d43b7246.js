"use strict";(globalThis.webpackChunkdocs_oasis_io=globalThis.webpackChunkdocs_oasis_io||[]).push([[9221],{21359:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>p,frontMatter:()=>d,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"node/run-your-node/maintenance/wiping-node-state","title":"Wiping Node State","description":"In certain situations, you may need to do a complete node redeployment with a","source":"@site/docs/node/run-your-node/maintenance/wiping-node-state.md","sourceDirName":"node/run-your-node/maintenance","slug":"/node/run-your-node/maintenance/wiping-node-state","permalink":"/node/run-your-node/maintenance/wiping-node-state","draft":false,"unlisted":false,"editUrl":"https://github.com/oasisprotocol/docs/edit/main/docs/node/run-your-node/maintenance/wiping-node-state.md","tags":[],"version":"current","lastUpdatedAt":1761867754000,"frontMatter":{"sidebar_custom_props":{}},"sidebar":"operators","previous":{"title":"Maintenance","permalink":"/node/run-your-node/maintenance"},"next":{"title":"Handling Network Upgrades","permalink":"/node/run-your-node/maintenance/handling-network-upgrades"}}');var s=t(74848),i=t(28453);const d={sidebar_custom_props:{tags:void 0}},r="Wiping Node State",a={},l=[{value:"State Wipe and Keep Node Identity",id:"state-wipe-and-keep-node-identity",level:2},{value:"Full State Wipe",id:"full-state-wipe",level:2}];function c(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"wiping-node-state",children:"Wiping Node State"})}),"\n",(0,s.jsx)(n.p,{children:"In certain situations, you may need to do a complete node redeployment with a\nclean state. Two common scenarios for this are during a breaking network upgrade\nor in cases of severe data corruption. If you need to wipe your node due to\nsevere corruption, it's important to note that your node will need some time to\ncatch up with the rest of the network."}),"\n",(0,s.jsxs)(n.p,{children:["The following instructions are based on the assumption that you have defined\nyour ",(0,s.jsx)(n.code,{children:"datadir"})," as ",(0,s.jsx)(n.code,{children:"/node/data"})," in your node's configuration."]}),"\n",(0,s.jsx)(n.h2,{id:"state-wipe-and-keep-node-identity",children:"State Wipe and Keep Node Identity"}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["Note that by default, the ",(0,s.jsx)(n.code,{children:"--preserve.mkvs_database"})," flag is set to true,\npreserving the runtime/paratime state."]})}),"\n",(0,s.jsx)(n.p,{children:"To wipe consensus state while preserving the runtime/paratime state follow\nthese instructions:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Stop the ",(0,s.jsx)(n.code,{children:"oasis-node"})," server process (this will depend on your own deployment\nsetup)."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Remove consensus state using the ",(0,s.jsx)(n.code,{children:"oasis-node unsafe-reset"})," command:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Do a dry run first to see which files will get deleted.\noasis-node unsafe-reset \\\n  --datadir=/node/data \\\n  --dry_run\n  \n# Delete.\noasis-node unsafe-reset \\\n  --datadir /node/data\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Start the ",(0,s.jsx)(n.code,{children:"oasis-node"})," server process."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.admonition,{type:"info",children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"oasis-node"})," is very strict regarding the ownership of the files. If you\nencounter the following error:"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"common/Mkdir: path '/node/data' has invalid owner: 1000. Expected owner: 0\n"})}),(0,s.jsxs)(n.p,{children:["you need to run the ",(0,s.jsx)(n.code,{children:"oasis-node"})," command as the exact user that owns the files,\ne.g.:"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo --user=#1000 -- oasis-node unsafe-reset --datadir=/node/data --dry_run --log.level info\n"})})]}),"\n",(0,s.jsx)(n.h2,{id:"full-state-wipe",children:"Full State Wipe"}),"\n",(0,s.jsx)(n.admonition,{type:"danger",children:(0,s.jsxs)(n.p,{children:["This is likely not what you want to do. This is destructive and will result in\nlosing private state required to operate the given node. ",(0,s.jsx)(n.strong,{children:"USE AT YOUR OWN\nRISK."})," A full state wipe will also mean that you'll need to generate a new node\nidentity (or copy the old one)."]})}),"\n",(0,s.jsx)(n.p,{children:"To perform a full state wipe follow these steps:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Stop the ",(0,s.jsx)(n.code,{children:"oasis-node"})," server process (this will depend on your own deployment\nsetup)"]}),"\n",(0,s.jsxs)(n.li,{children:["Remove the ",(0,s.jsx)(n.code,{children:"/node/data"})," directory."]}),"\n",(0,s.jsx)(n.li,{children:"Redeploy your node. You'll need to copy your Node artifacts or create brand\nnew ones."}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>r});var o=t(96540);const s={},i=o.createContext(s);function d(e){const n=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);