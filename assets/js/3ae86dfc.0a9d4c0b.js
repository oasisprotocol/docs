"use strict";(globalThis.webpackChunkdocs_oasis_io=globalThis.webpackChunkdocs_oasis_io||[]).push([[1915],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var o=t(96540);const s={},i=o.createContext(s);function r(e){const n=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:n},e.children)}},92348:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"core/encoding","title":"Encoding","description":"All messages exchanged by different components in Oasis Core are encoded using","source":"@site/docs/core/encoding.md","sourceDirName":"core","slug":"/core/encoding","permalink":"/core/encoding","draft":false,"unlisted":false,"editUrl":"https://github.com/oasisprotocol/oasis-core/edit/stable/24.2.x/docs/encoding.md","tags":[],"version":"current","lastUpdatedAt":1757571245000,"frontMatter":{"sidebar_custom_props":{}},"sidebar":"oasisCore","previous":{"title":"Common Functionality","permalink":"/core/common-functionality"},"next":{"title":"Cryptography","permalink":"/core/crypto"}}');var s=t(74848),i=t(28453);const r={sidebar_custom_props:{tags:void 0}},c="Encoding",a={},d=[];function l(e){const n={a:"a",h1:"h1",header:"header",p:"p",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"encoding",children:"Encoding"})}),"\n",(0,s.jsxs)(n.p,{children:["All messages exchanged by different components in Oasis Core are encoded using\n",(0,s.jsx)(n.a,{href:"https://tools.ietf.org/html/rfc7049",children:"canonical CBOR as defined by RFC 7049"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"When describing different messages in the documentation, we use Go structs with\nfield annotations that specify how different fields translate to their encoded\nform."})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);