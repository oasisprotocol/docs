"use strict";(globalThis.webpackChunkdocs_oasis_io=globalThis.webpackChunkdocs_oasis_io||[]).push([[1305],{23852:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"build/opl/celer/ping-example","title":"Ping Example","description":"Ping example with Celer IM","source":"@site/docs/build/opl/celer/ping-example.md","sourceDirName":"build/opl/celer","slug":"/build/opl/celer/ping-example","permalink":"/build/opl/celer/ping-example","draft":false,"unlisted":false,"editUrl":"https://github.com/oasisprotocol/docs/edit/main/docs/build/opl/celer/ping-example.md","tags":[],"version":"current","lastUpdatedAt":1761867754000,"frontMatter":{"description":"Ping example with Celer IM","sidebar_custom_props":{}},"sidebar":"developers","previous":{"title":"Celer Inter-Chain Messaging (IM)","permalink":"/build/opl/celer/"},"next":{"title":"Supported Networks","permalink":"/build/opl/celer/networks"}}');var t=s(74848),r=s(28453);const o={description:"Ping example with Celer IM",sidebar_custom_props:{tags:void 0}},c="Ping Example",l={},a=[{value:"Overview Ping",id:"overview-ping",level:2},{value:"Contract Setup",id:"contract-setup",level:2},{value:"Key points",id:"key-points",level:3},{value:"Compiling the Contract",id:"compiling-the-contract",level:2},{value:"Deploying the Contract",id:"deploying-the-contract",level:2},{value:"Deploying on BSC Testnet",id:"deploying-on-bsc-testnet",level:3},{value:"Deploying on Sapphire Testnet",id:"deploying-on-sapphire-testnet",level:3},{value:"Executing Ping",id:"executing-ping",level:2},{value:"Checking execution",id:"checking-execution",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"ping-example",children:"Ping Example"})}),"\n",(0,t.jsxs)(n.p,{children:["This tutorial demonstrates how to send a cross-chain message using\n",(0,t.jsx)(n.a,{href:"https://im-docs.celer.network/",children:"Celer's Inter-Chain Messaging (IM)"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"You'll learn how to:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Deploy MessageBus-compatible contracts"}),"\n",(0,t.jsx)(n.li,{children:"Send cross-chain messages"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["We recommend using ",(0,t.jsx)(n.a,{href:"https://remix.ethereum.org/",children:"Remix"})," for an easy-to-follow experience.\nThe only prerequisite is a set-up Metamask account."]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["If you're new to Remix, follow our basic guide for using Remix\n",(0,t.jsx)(n.a,{href:"/build/tools/remix",children:"here"}),"."]})}),"\n",(0,t.jsx)(n.h2,{id:"overview-ping",children:"Overview Ping"}),"\n",(0,t.jsxs)(n.p,{children:["In this example, you'll deploy the same contract on two different chains.\nYou'll then send a ",(0,t.jsx)(n.code,{children:"ping"})," from ",(0,t.jsx)(n.em,{children:"BSC Testnet"})," to ",(0,t.jsx)(n.em,{children:"Saphhire Testnet"}),", facilitated\nby Celer-IM.\nThe contract on ",(0,t.jsx)(n.em,{children:"Sapphire Testnet"})," will receive the ",(0,t.jsx)(n.code,{children:"ping"})," and emits an event\nwith the message which was received."]}),"\n",(0,t.jsx)(n.h2,{id:"contract-setup",children:"Contract Setup"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Open ",(0,t.jsx)(n.a,{href:"https://remix.ethereum.org/",children:"Remix"})," and create a new file called ",(0,t.jsx)(n.code,{children:"Ping.sol"})]}),"\n",(0,t.jsx)(n.li,{children:"Paste the following contract and interface into it:"}),"\n"]}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:" Ping.sol Contract "}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-solidity",metastring:'title="Ping.sol" showLineNumbers',children:'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IMessageBus {\n        function sendMessage(\n        address _receiver,\n        uint256 _dstChainId,\n        bytes calldata _message\n    ) external payable;\n}\n\n\ncontract Ping  {\n    address public messageBus;\n\n    event MessageReceived(\n        address srcContract,\n        uint64 srcChainId,\n        address sender,\n        bytes message\n    );\n\n\n    enum ExecutionStatus {\n        Fail, // execution failed, finalized\n        Success, // execution succeeded, finalized\n        Retry // execution rejected, can retry later\n    }\n\n    constructor(address _messageBus) {\n        messageBus = _messageBus;\n    }\n\n    modifier onlyMessageBus() {\n        require(msg.sender == messageBus, "caller is not message bus");\n        _;\n    }\n\n\n    function sendPing(\n        address _dstContract,\n        uint64 _dstChainId,\n        bytes calldata _message\n    ) external payable {\n        bytes memory message = abi.encode(msg.sender, _message);\n        IMessageBus(messageBus).sendMessage{value: msg.value}(_dstContract, _dstChainId, message);\n    }\n\n    function executeMessage(\n        address _srcContract,\n        uint64 _srcChainId,\n        bytes calldata _message,\n        address // executor\n    ) external payable onlyMessageBus returns (ExecutionStatus) {\n        (address sender, bytes memory message) = abi.decode(\n            (_message),\n            (address, bytes)\n        );\n        emit MessageReceived(_srcContract, _srcChainId, sender, message);\n        return ExecutionStatus.Success;\n    }\n}\n'})})]}),"\n",(0,t.jsx)(n.h3,{id:"key-points",children:"Key points"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"messageBus"}),": Celer's MessageBus contract on the respective chain."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"sendPing"}),": Initiates the cross-chain my calling Celers MessageBus."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"executeMessage"}),": Called by Celer's MessageBus on the destination chian."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"compiling-the-contract",children:"Compiling the Contract"}),"\n",(0,t.jsxs)(n.p,{children:["For compatibility with Sapphire, compile the contract using compiler version\n",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"0.8.24"})})," and evm version ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"paris"})})," (under advanced configuration)."]}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsx)(n.p,{children:"You can also use Celer's framework contracts and interfaces by importing them"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-solidity",children:'import "sgn-v2-contracts/contracts/message/framework/MessageBusAddress.sol";\nimport "sgn-v2-contracts/contracts/message/framework/MessageReceiverApp.sol";\nimport "sgn-v2-contracts/contracts/message/interfaces/IMessageBus.sol";\n'})}),(0,t.jsxs)(n.p,{children:["but this will limit you to use only Solidity version ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"0.8.9"})}),"."]})]}),"\n",(0,t.jsx)(n.h2,{id:"deploying-the-contract",children:"Deploying the Contract"}),"\n",(0,t.jsxs)(n.p,{children:["Deploy the Ping contract on two different chains: ",(0,t.jsx)(n.code,{children:"BSC Testnet"})," and\n",(0,t.jsx)(n.code,{children:"Sapphire Testnet"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"deploying-on-bsc-testnet",children:"Deploying on BSC Testnet"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Obtain BNB test token for ",(0,t.jsx)(n.code,{children:"BSC Testnet"})," from the ",(0,t.jsx)(n.a,{href:"https://www.bnbchain.org/en/testnet-faucet",children:"BNB faucet"})," or their\ndiscord."]}),"\n",(0,t.jsxs)(n.li,{children:["In MetaMask, switch to the ",(0,t.jsx)(n.code,{children:"BSC Testnet"})," network and select\n",(0,t.jsx)(n.code,{children:"Injected Provider - MetaMask"})," as the environment in Remix."]}),"\n",(0,t.jsxs)(n.li,{children:["Fill in the messageBus address for BSC Testnet:\n",(0,t.jsx)(n.code,{children:"0xAd204986D6cB67A5Bc76a3CB8974823F43Cb9AAA"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Deploy the contract on ",(0,t.jsx)(n.code,{children:"BSC Testnet"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"deploying-on-sapphire-testnet",children:"Deploying on Sapphire Testnet"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Obtain TEST tokens for ",(0,t.jsx)(n.code,{children:"Sapphire Testnet"})," from the ",(0,t.jsx)(n.a,{href:"https://faucet.testnet.oasis.io/",children:"Oasis faucet"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["In Metamask, switch to the ",(0,t.jsx)(n.code,{children:"Sapphire Testnet"})," network and select\n",(0,t.jsx)(n.code,{children:"Injected Provider - MetaMask"})," as the environment in Remix"]}),"\n",(0,t.jsxs)(n.li,{children:["Fill in the messageBus address for BSC Testnet:\n",(0,t.jsx)(n.code,{children:"0x9Bb46D5100d2Db4608112026951c9C965b233f4D"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"Deploy the contract on Sapphire Testnet"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"executing-ping",children:"Executing Ping"}),"\n",(0,t.jsx)(n.p,{children:"Now that you've deployed the contacts, you can send the ping message\ncross-chain."}),"\n",(0,t.jsx)(n.p,{children:"You'll need the following three parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"_dstContract"}),": The contract address of the reveiving contract on the\ndestination chain which you just deployed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"_dstChainId"}),": The chain id of the destination chain. Which is in our\nexample ",(0,t.jsx)(n.code,{children:"Sapphire Testnet"})," - ",(0,t.jsx)(n.code,{children:"23295"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"message"}),': The encoded message. e.g. "Hello from BSC" -\n',(0,t.jsx)(n.code,{children:"0x48656c6c6f2066726f6d20425343000000000000000000000000000000000000"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Additionally you'll have to pay a fee which you send as value. For sending the\nping 0.001 tBNB (1000000 gwei) will be enough."}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["For the ",(0,t.jsx)(n.code,{children:"Sapphire Testnet"})," an executor is running to relay the messages every\nfew minutes. If you deploy on mainnet please refer to the ",(0,t.jsx)(n.a,{href:"/build/opl/celer/#executor",children:"Executor chapter"}),"."]})}),"\n",(0,t.jsx)(n.h2,{id:"checking-execution",children:"Checking execution"}),"\n",(0,t.jsxs)(n.p,{children:["To see if you successfully send a ping message cross-chain you can watch for\nnew transactions at the ",(0,t.jsx)(n.a,{href:"https://explorer.oasis.io/testnet/sapphire/address/0x9Bb46D5100d2Db4608112026951c9C965b233f4D",children:"MessageBus address"})," from Celer or your deployed\ncontract Sapphire Testnet."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var i=s(96540);const t={},r=i.createContext(t);function o(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);