"use strict";(globalThis.webpackChunkdocs_oasis_io=globalThis.webpackChunkdocs_oasis_io||[]).push([[4770],{15533:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"build/opl/router-protocol/pingpong-example","title":"PingPong Example","description":"PingPong example with Router CrossTalk","source":"@site/docs/build/opl/router-protocol/pingpong-example.md","sourceDirName":"build/opl/router-protocol","slug":"/build/opl/router-protocol/pingpong-example","permalink":"/build/opl/router-protocol/pingpong-example","draft":false,"unlisted":false,"editUrl":"https://github.com/oasisprotocol/docs/edit/main/docs/build/opl/router-protocol/pingpong-example.md","tags":[],"version":"current","lastUpdatedAt":1761867754000,"frontMatter":{"description":"PingPong example with Router CrossTalk","sidebar_custom_props":{}},"sidebar":"developers","previous":{"title":"Router Protocol","permalink":"/build/opl/router-protocol/"},"next":{"title":"Router Interfaces","permalink":"/build/opl/router-protocol/interface"}}');var s=t(74848),i=t(28453);const o={description:"PingPong example with Router CrossTalk",sidebar_custom_props:{tags:void 0}},a="PingPong Example",c={},d=[{value:"Overview PingPong",id:"overview-pingpong",level:2},{value:"Contract Setup",id:"contract-setup",level:2},{value:"Key Contract Functions",id:"key-contract-functions",level:3},{value:"Compiling the Contract",id:"compiling-the-contract",level:2},{value:"Deploying the Contract",id:"deploying-the-contract",level:2},{value:"Deploying on Sapphire Testnet",id:"deploying-on-sapphire-testnet",level:3},{value:"Deploying on Polygon Amoy",id:"deploying-on-polygon-amoy",level:3},{value:"Approving the Fee Payer",id:"approving-the-fee-payer",level:2},{value:"Executing PingPong",id:"executing-pingpong",level:2},{value:"Step 1: Obtaining Request Metadata",id:"step-1-obtaining-request-metadata",level:3},{value:"Step 2: Executing iPing()",id:"step-2-executing-iping",level:3}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"pingpong-example",children:"PingPong Example"})}),"\n",(0,s.jsxs)(n.p,{children:["This tutorial demonstrates how to send a cross-chain message using Router\nProtocol's ",(0,s.jsx)(n.a,{href:"https://docs.routerprotocol.com/develop/message-transfer-via-crosstalk",children:"CrossTalk"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"You'll learn how to:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Deploy Router-compatible contracts"}),"\n",(0,s.jsx)(n.li,{children:"Approve the feePayer for your contracts"}),"\n",(0,s.jsx)(n.li,{children:"Prepare metadata for cross-chain calls"}),"\n",(0,s.jsx)(n.li,{children:"Send cross-chain messages"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["We recommend using ",(0,s.jsx)(n.a,{href:"https://remix.ethereum.org/",children:"Remix"})," for an easy-to-follow experience.\nThe only prerequisite is a set-up Metamask account."]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["If you're new to Remix, follow our basic guide for using Remix\n",(0,s.jsx)(n.a,{href:"/build/tools/remix",children:"here"}),"."]})}),"\n",(0,s.jsx)(n.h2,{id:"overview-pingpong",children:"Overview PingPong"}),"\n",(0,s.jsxs)(n.p,{children:["In this example, you'll deploy the same contract on two different chains.\nYou'll then send a ",(0,s.jsx)(n.code,{children:"ping"})," from chain A to chain B, facilitated by Router\nProtocol's ",(0,s.jsx)(n.a,{href:"https://docs.routerprotocol.com/develop/message-transfer-via-crosstalk",children:"CrossTalk"}),". The contract on chain B will receive the ",(0,s.jsx)(n.code,{children:"ping"})," and\nrespond back to Router Protocol. Finally, Router Protocol will send an\nacknowledgment message back to the contract on chain A."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"PingPong Flow",src:t(95562).A+"",width:"1250",height:"584"})}),"\n",(0,s.jsx)(n.h2,{id:"contract-setup",children:"Contract Setup"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Open ",(0,s.jsx)(n.a,{href:"https://remix.ethereum.org/",children:"Remix"})," and create a new file called ",(0,s.jsx)(n.code,{children:"PingPong.sol"})]}),"\n",(0,s.jsx)(n.li,{children:"Paste the following contract into it:"}),"\n"]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:" PingPong.sol Contract "}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-solidity",metastring:'title="PingPong.sol" showLineNumbers',children:'//SPDX-License-Identifier: UNLICENSED\npragma solidity >=0.8.0 <0.9.0;\n\nimport "@routerprotocol/evm-gateway-contracts/contracts/IGateway.sol";\n\n/// @title PingPong\n/// @author Yashika Goyal\n/// @notice This is a cross-chain ping pong smart contract to demonstrate how one can\n/// utilise Router CrossTalk for cross-chain transactions.\ncontract PingPong {\n    address public owner;\n    uint64 public currentRequestId;\n\n    // srcChainId + requestId => pingFromSource\n    mapping(string => mapping(uint64 => string)) public pingFromSource;\n    // requestId => ackMessage\n    mapping(uint64 => string) public ackFromDestination;\n\n    // instance of the Router\'s gateway contract\n    IGateway public gatewayContract;\n\n    // custom error so that we can emit a custom error message\n    error CustomError(string message);\n\n    // event we will emit while sending a ping to destination chain\n    event PingFromSource(\n        string indexed srcChainId,\n        uint64 indexed requestId,\n        string message\n    );\n    event NewPing(uint64 indexed requestId);\n\n    // events we will emit while handling acknowledgement\n    event ExecutionStatus(uint256 indexed eventIdentifier, bool isSuccess);\n    event AckFromDestination(uint64 indexed requestId, string ackMessage);\n\n    constructor(address payable gatewayAddress, string memory feePayerAddress) {\n        owner = msg.sender;\n\n        gatewayContract = IGateway(gatewayAddress);\n\n        gatewayContract.setDappMetadata(feePayerAddress);\n    }\n\n    /// @notice function to set the fee payer address on Router Chain.\n    /// @param feePayerAddress address of the fee payer on Router Chain.\n    function setDappMetadata(string memory feePayerAddress) external {\n        require(msg.sender == owner, "only owner");\n        gatewayContract.setDappMetadata(feePayerAddress);\n    }\n\n    /// @notice function to set the Router Gateway Contract.\n    /// @param gateway address of the gateway contract.\n    function setGateway(address gateway) external {\n        require(msg.sender == owner, "only owner");\n        gatewayContract = IGateway(gateway);\n    }\n\n    /// @notice function to generate a cross-chain request to ping a destination chain contract.\n    /// @param destChainId chain ID of the destination chain in string.\n    /// @param destinationContractAddress contract address of the contract that will handle this\n    /// @param str string to be pinged to destination\n    /// @param requestMetadata abi-encoded metadata according to source and destination chains\n    function iPing(\n        string calldata destChainId,\n        string calldata destinationContractAddress,\n        string calldata str,\n        bytes calldata requestMetadata\n    ) public payable {\n        currentRequestId++;\n\n        bytes memory packet = abi.encode(currentRequestId, str);\n        bytes memory requestPacket = abi.encode(destinationContractAddress, packet);\n        gatewayContract.iSend{ value: msg.value }(\n        1,\n        0,\n        string(""),\n        destChainId,\n        requestMetadata,\n        requestPacket\n        );\n        emit NewPing(currentRequestId);\n    }\n\n    /// @notice function to get the request metadata to be used while initiating cross-chain request\n    /// @return requestMetadata abi-encoded metadata according to source and destination chains\n    function getRequestMetadata(\n        uint64 destGasLimit,\n        uint64 destGasPrice,\n        uint64 ackGasLimit,\n        uint64 ackGasPrice,\n        uint128 relayerFees,\n        uint8 ackType,\n        bool isReadCall,\n        string memory asmAddress\n    ) public pure returns (bytes memory) {\n        bytes memory requestMetadata = abi.encodePacked(\n        destGasLimit,\n        destGasPrice,\n        ackGasLimit,\n        ackGasPrice,\n        relayerFees,\n        ackType,\n        isReadCall,\n        asmAddress\n        );\n        return requestMetadata;\n    }\n\n    /// @notice function to handle the cross-chain request received from some other chain.\n    /// @param packet the payload sent by the source chain contract when the request was created.\n    /// @param srcChainId chain ID of the source chain in string.\n    function iReceive(\n        string memory, //requestSender,\n        bytes memory packet,\n        string memory srcChainId\n    ) external returns (uint64, string memory) {\n        require(msg.sender == address(gatewayContract), "only gateway");\n        (uint64 requestId, string memory sampleStr) = abi.decode(\n        packet,\n        (uint64, string)\n        );\n        if (\n        keccak256(abi.encodePacked(sampleStr)) == keccak256(abi.encodePacked(""))\n        ) {\n        revert CustomError("String should not be empty");\n        }\n        pingFromSource[srcChainId][requestId] = sampleStr;\n\n        emit PingFromSource(srcChainId, requestId, sampleStr);\n\n        return (requestId, sampleStr);\n    }\n\n    /// @notice function to handle the acknowledgement received from the destination chain\n    /// back on the source chain.\n    /// @param requestIdentifier event nonce which is received when we create a cross-chain request\n    /// We can use it to keep a mapping of which nonces have been executed and which did not.\n    /// @param execFlag a boolean value suggesting whether the call was successfully\n    /// executed on the destination chain.\n    /// @param execData returning the data returned from the handleRequestFromSource\n    /// function of the destination chain.\n    function iAck(\n        uint256 requestIdentifier,\n        bool execFlag,\n        bytes memory execData\n    ) external {\n        (uint64 requestId, string memory ackMessage) = abi.decode(\n        execData,\n        (uint64, string)\n        );\n\n        ackFromDestination[requestId] = ackMessage;\n\n        emit ExecutionStatus(requestIdentifier, execFlag);\n        emit AckFromDestination(requestId, ackMessage);\n    }\n}\n'})})]}),"\n",(0,s.jsx)(n.h3,{id:"key-contract-functions",children:"Key Contract Functions"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"iPing"}),": Initiates the cross-chain message by calling Router's\n",(0,s.jsx)(n.code,{children:"IGateway.iSend"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"iReceive"}),": Serves as the entry point on the destination contract."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"iAck"}),": Handles the acknowledgment in a bidirectional cross-chain message on\nthe source contract."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"compiling-the-contract",children:"Compiling the Contract"}),"\n",(0,s.jsxs)(n.p,{children:["For compatibility with Sapphire, compile the contract using compiler version\n",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"0.8.24"})})," and evm version ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"paris"})})," (under advanced configuration)."]}),"\n",(0,s.jsx)(n.h2,{id:"deploying-the-contract",children:"Deploying the Contract"}),"\n",(0,s.jsxs)(n.p,{children:["Deploy the PingPong contract on two different chains: ",(0,s.jsx)(n.code,{children:"Sapphire Testnet"})," and\n",(0,s.jsx)(n.code,{children:"Polygon Amoy"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"deploying-on-sapphire-testnet",children:"Deploying on Sapphire Testnet"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Obtain TEST tokens for ",(0,s.jsx)(n.code,{children:"Sapphire Testnet"})," from the ",(0,s.jsx)(n.a,{href:"https://faucet.testnet.oasis.io/",children:"Oasis faucet"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["In Metamask, switch to the ",(0,s.jsx)(n.code,{children:"Sapphire Testnet"})," network and select\n",(0,s.jsx)(n.code,{children:"Injected Provider - MetaMask"})," as the environment in Remix"]}),"\n",(0,s.jsx)(n.li,{children:"Fill in the deployment parameters:"}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"gatewayAddress"})}),": ",(0,s.jsx)(n.code,{children:"0xfbe6d1e711cc2bc241dfa682cbbff6d68bf62e67"}),"\n(current Sapphire Testnet Gateway)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"feePayerAddress"})}),": Your current account address\n(copy from MetaMask or Remix)"]}),"\n"]}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsx)(n.li,{children:"Deploy the contract on Sapphire Testnet"}),"\n"]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:" Remix Example "}),(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Deploy Sapphire",src:t(41845).A+"",width:"350",height:"578"})})]}),"\n",(0,s.jsx)(n.h3,{id:"deploying-on-polygon-amoy",children:"Deploying on Polygon Amoy"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Obtain POL tokens for ",(0,s.jsx)(n.code,{children:"Polygon Amoy"})," Testnet from the ",(0,s.jsx)(n.a,{href:"https://faucet.polygon.technology/",children:"Polygon faucet"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Switch to the ",(0,s.jsx)(n.code,{children:"Polygon Amoy"})," network in Metamask."]}),"\n",(0,s.jsx)(n.li,{children:"Fill in the deployment parameters:"}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"gatewayAddress"})}),": ",(0,s.jsx)(n.code,{children:"0x778a1f43459a05accd8b57007119f103c249f929"}),"\n(current Polygon Amoy Gateway)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"feePayerAddress"})}),": Your current account address\n(copy from MetaMask or Remix)"]}),"\n"]}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsx)(n.li,{children:"Deploy the contract on Polygon Amoy"}),"\n"]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:" Remix Example "}),(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Deploy Polygon Amoy",src:t(49253).A+"",width:"350",height:"577"})})]}),"\n",(0,s.jsx)(n.h2,{id:"approving-the-fee-payer",children:"Approving the Fee Payer"}),"\n",(0,s.jsxs)(n.p,{children:["After deploying the contracts, approve the ",(0,s.jsx)(n.strong,{children:"fee payer"})," on the Router Chain:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Obtain Router test tokens from the ",(0,s.jsx)(n.a,{href:"https://faucet.routerprotocol.com/",children:"Router faucet"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Approve the contracts on the ",(0,s.jsx)(n.a,{href:"https://testnet.routerscan.io/feePayer",children:"Router Explorer"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["For detailed instructions on fee payer approval, see our ",(0,s.jsx)(n.a,{href:"/build/opl/router-protocol/approve",children:"approval guide"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"executing-pingpong",children:"Executing PingPong"}),"\n",(0,s.jsxs)(n.p,{children:["Now that you've deployed the contracts and approved the fee payer, you can play\n",(0,s.jsx)(n.strong,{children:"PingPong"}),". This process involves two steps:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Obtaining the Request Metadata"}),"\n",(0,s.jsx)(n.li,{children:"Executing the iPing function"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"step-1-obtaining-request-metadata",children:"Step 1: Obtaining Request Metadata"}),"\n",(0,s.jsxs)(n.p,{children:["Call the ",(0,s.jsx)(n.code,{children:"getRequestMetadata()"})," function with the following parameters:"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Argument"}),(0,s.jsx)(n.th,{children:"Example Value"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"destGasLimit"}),(0,s.jsx)(n.td,{children:"300000"}),(0,s.jsx)(n.td,{children:"Gas limit on destination chain"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"destGasPrice"}),(0,s.jsx)(n.td,{children:"100000000000"}),(0,s.jsx)(n.td,{children:"Gas price on destination chain"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ackGasLimit"}),(0,s.jsx)(n.td,{children:"300000"}),(0,s.jsx)(n.td,{children:"Gas limit on source chain for ack"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ackGasPrice"}),(0,s.jsx)(n.td,{children:"100000000000"}),(0,s.jsx)(n.td,{children:"Gas price on source chain for ack"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"relayerFees"}),(0,s.jsx)(n.td,{children:"10000000000"}),(0,s.jsx)(n.td,{children:"Relayer fees on Router chain"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ackType"}),(0,s.jsx)(n.td,{children:"3"}),(0,s.jsx)(n.td,{children:"Acknowledge type"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"isReadCall"}),(0,s.jsx)(n.td,{children:"false"}),(0,s.jsx)(n.td,{children:"Weather the call is read-only"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"asmAddress"}),(0,s.jsx)(n.td,{children:'"0x"'}),(0,s.jsx)(n.td,{children:"Address for the additional security module"})]})]})]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:" Remix Example "}),(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Router getRequestMetadata",src:t(72581).A+"",width:"500",height:"799"})})]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"You will need the bytes answer in the next step, so copy it!"})}),"\n",(0,s.jsxs)(n.p,{children:["For more information about request metadata, see the\n",(0,s.jsx)(n.a,{href:"https://docs.routerprotocol.com/develop/message-transfer-via-crosstalk/evm-guides/iDapp-functions/iSend#5-requestmetadata",children:"Router documentation"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"step-2-executing-iping",children:"Step 2: Executing iPing()"}),"\n",(0,s.jsxs)(n.p,{children:["To initiate the cross-chain message, call ",(0,s.jsx)(n.code,{children:"iPing"})," with these parameters:"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Argument"}),(0,s.jsx)(n.th,{children:"Value"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"destChainId"}),(0,s.jsx)(n.td,{children:"23295"}),(0,s.jsx)(n.td,{children:"Destination Chain ID (e.g. Sapphire)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"destinationContractAddress"}),(0,s.jsx)(n.td,{children:"0x<your-contract>"}),(0,s.jsx)(n.td,{children:"Contract address on the destination chain"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"str"}),(0,s.jsx)(n.td,{children:'"Hello"'}),(0,s.jsx)(n.td,{children:"Message to include in the ping"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"requestMetadata"}),(0,s.jsx)(n.td,{children:"<bytes string>"}),(0,s.jsx)(n.td,{children:"Bytes response from the getRequestMetada call"})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:["After sending the transaction, you can monitor its status on the\n",(0,s.jsx)(n.a,{href:"https://testnet.routerscan.io/crosschain",children:"Router Explorer"}),"."]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:" Remix Example "}),(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Router iPing",src:t(94573).A+"",width:"500",height:"643"})})]}),"\n",(0,s.jsx)(n.p,{children:"This completes the PingPong example, demonstrating cross-chain messaging using\nRouter Protocol's CrossTalk framework."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var r=t(96540);const s={},i=r.createContext(s);function o(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:n},e.children)}},41845:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/router-deploy-pingpong-sapphire-1243fd2b62b57393a91e93a2f72bcfe7.png"},49253:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/router-deploy-pingpong-amoy-0ee5faee66b32b311c6067005a2434ca.png"},72581:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/router-metadata-473c249aeed3799506a10c7e67b7e4bc.png"},94573:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/router-iping-bae17c44ac31b012c94ac08e24b8de13.png"},95562:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/opl-router-pingpong-flow.mmd-aea29582341e47291dcfa97f351f66dc.svg"}}]);