"use strict";(globalThis.webpackChunkdocs_oasis_io=globalThis.webpackChunkdocs_oasis_io||[]).push([[8003],{11470:(e,n,s)=>{s.d(n,{A:()=>w});var t=s(96540),r=s(34164),i=s(17559),o=s(23104),a=s(56347),l=s(205),c=s(57485),d=s(31682),u=s(70679);function h(e){return t.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(e){const{values:n,children:s}=e;return(0,t.useMemo)(()=>{const e=n??function(e){return h(e).map(({props:{value:e,label:n,attributes:s,default:t}})=>({value:e,label:n,attributes:s,default:t}))}(s);return function(e){const n=(0,d.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,s])}function x({value:e,tabValues:n}){return n.some(n=>n.value===e)}function g({queryString:e=!1,groupId:n}){const s=(0,a.W6)(),r=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,c.aZ)(r),(0,t.useCallback)(e=>{if(!r)return;const n=new URLSearchParams(s.location.search);n.set(r,e),s.replace({...s.location,search:n.toString()})},[r,s])]}function m(e){const{defaultValue:n,queryString:s=!1,groupId:r}=e,i=p(e),[o,a]=(0,t.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!x({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const s=n.find(e=>e.default)??n[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:i})),[c,d]=g({queryString:s,groupId:r}),[h,m]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[s,r]=(0,u.Dv)(n);return[s,(0,t.useCallback)(e=>{n&&r.set(e)},[n,r])]}({groupId:r}),v=(()=>{const e=c??h;return x({value:e,tabValues:i})?e:null})();(0,l.A)(()=>{v&&a(v)},[v]);return{selectedValue:o,selectValue:(0,t.useCallback)(e=>{if(!x({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);a(e),d(e),m(e)},[d,m,i]),tabValues:i}}var v=s(92303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=s(74848);function b({className:e,block:n,selectedValue:s,selectValue:t,tabValues:i}){const a=[],{blockElementScrollPositionUntilNextRender:l}=(0,o.a_)(),c=e=>{const n=e.currentTarget,r=a.indexOf(n),o=i[r].value;o!==s&&(l(n),t(o))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const s=a.indexOf(e.currentTarget)+1;n=a[s]??a[0];break}case"ArrowLeft":{const s=a.indexOf(e.currentTarget)-1;n=a[s]??a[a.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},e),children:i.map(({value:e,label:n,attributes:t})=>(0,f.jsx)("li",{role:"tab",tabIndex:s===e?0:-1,"aria-selected":s===e,ref:e=>{a.push(e)},onKeyDown:d,onClick:c,...t,className:(0,r.A)("tabs__item",j.tabItem,t?.className,{"tabs__item--active":s===e}),children:n??e},e))})}function y({lazy:e,children:n,selectedValue:s}){const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=i.find(e=>e.props.value===s);return e?(0,t.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:i.map((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==s}))})}function S(e){const n=m(e);return(0,f.jsxs)("div",{className:(0,r.A)(i.G.tabs.container,"tabs-container",j.tabList),children:[(0,f.jsx)(b,{...n,...e}),(0,f.jsx)(y,{...n,...e})]})}function w(e){const n=(0,v.A)();return(0,f.jsx)(S,{...e,children:h(e.children)},String(n))}},19365:(e,n,s)=>{s.d(n,{A:()=>o});s(96540);var t=s(34164);const r={tabItem:"tabItem_Ymn6"};var i=s(74848);function o({children:e,hidden:n,className:s}){return(0,i.jsx)("div",{role:"tabpanel",className:(0,t.A)(r.tabItem,s),hidden:n,children:e})}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var t=s(96540);const r={},i=t.createContext(r);function o(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}},99055:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"node/run-your-node/prerequisites/set-up-tee","title":"Set up Trusted Execution Environment (TEE)","description":"Most Oasis ParaTimes and ROFLs are configured to run in a TEE. There are two","source":"@site/docs/node/run-your-node/prerequisites/set-up-tee.mdx","sourceDirName":"node/run-your-node/prerequisites","slug":"/node/run-your-node/prerequisites/set-up-tee","permalink":"/node/run-your-node/prerequisites/set-up-tee","draft":false,"unlisted":false,"editUrl":"https://github.com/oasisprotocol/docs/edit/main/docs/node/run-your-node/prerequisites/set-up-tee.mdx","tags":[],"version":"current","lastUpdatedAt":1761867754000,"frontMatter":{"sidebar_custom_props":{}},"sidebar":"operators","previous":{"title":"System Configuration","permalink":"/node/run-your-node/prerequisites/system-configuration"},"next":{"title":"Validator Node","permalink":"/node/run-your-node/validator-node"}}');var r=s(74848),i=s(28453);s(11470),s(19365);const o={sidebar_custom_props:{tags:void 0}},a="Set up Trusted Execution Environment (TEE)",l={},c=[{value:"Software Guard Extensions (SGX)",id:"sgx",level:2},{value:"BIOS Configuration",id:"sgx-bios-configuration",level:3},{value:"Ensure Clock Synchronization",id:"ensure-clock-synchronization",level:3},{value:"Ensure Proper SGX Device Permissions",id:"ensure-proper-sgx-device-permissions",level:3},{value:"AESM Service",id:"aesm-service",level:3},{value:"DCAP Attestation",id:"dcap-attestation",level:3},{value:"Ubuntu 22.04+",id:"ubuntu-2204",level:4},{value:"Configuring the Quote Provider",id:"configuring-the-quote-provider",level:4},{value:"Intel PCS",id:"intel-pcs",level:5},{value:"Cloud Service Provider&#39;s PCCS",id:"cloud-service-providers-pccs",level:5},{value:"Own PCCS",id:"own-pccs",level:5},{value:"DCAP Attestation Docker",id:"dcap-attestation-docker",level:4},{value:"Multi-socket Systems",id:"multi-socket-systems",level:4},{value:"Ubuntu 22.04+",id:"ubuntu-2204-1",level:5},{value:"VMware vSphere 8.0+",id:"vmware-vsphere-80",level:5},{value:"Migrate from EPID Attestation to DCAP Attestation",id:"migrate-from-epid-attestation-to-dcap-attestation",level:3},{value:"Check SGX Setup",id:"check-sgx-setup",level:3},{value:"Trust Domain Extensions (TDX)",id:"tdx",level:2},{value:"BIOS configuration",id:"tdx-bios-configuration",level:3},{value:"Host OS setup",id:"host-os-setup",level:3},{value:"Check TDX Setup",id:"check-tdx-setup",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"set-up-trusted-execution-environment-tee",children:"Set up Trusted Execution Environment (TEE)"})}),"\n",(0,r.jsx)(n.p,{children:"Most Oasis ParaTimes and ROFLs are configured to run in a TEE. There are two\nkinds of Intel TEEs currently in use:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://www.intel.com/content/www/us/en/architecture-and-technology/software-guard-extensions.html",children:"Intel SGX"})," is required by the ParaTimes and ",(0,r.jsx)(n.a,{href:"/build/rofl/workflow/init",children:"ROFL SGX"})," apps."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://www.intel.com/content/www/us/en/products/docs/accelerator-engines/trust-domain-extensions.html",children:"Intel TDX"})," is required by the ",(0,r.jsx)(n.a,{href:"/build/rofl/workflow/init",children:"ROFL TDX raw and container-based"}),"\napps."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"To run SGX/TDX enclaves:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"your hardware must have SGX/TDX support,"}),"\n",(0,r.jsx)(n.li,{children:"you must have the latest BIOS updates installed,"}),"\n",(0,r.jsx)(n.li,{children:"you must have SGX/TDX enabled in your BIOS,"}),"\n",(0,r.jsx)(n.li,{children:"you must have the Linux kernel, drivers and software components properly\ninstalled and running."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"sgx",children:"Software Guard Extensions (SGX)"}),"\n",(0,r.jsx)(n.h3,{id:"sgx-bios-configuration",children:"BIOS Configuration"}),"\n",(0,r.jsxs)(n.p,{children:["To enable Intel SGX on your hardware, you also need to configure the BIOS.\nFirst, ",(0,r.jsx)(n.strong,{children:"update the BIOS to the latest version with the latest microcode"})," and\nthen proceed with BIOS configuration as shown below. Note that some settings may\nnot apply to your BIOS. In that case, configure only the relevant ones. Please\nset the BIOS settings as follows:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SGX"}),": ENABLE"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Hyper-Threading"}),": DISABLE"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Intel SpeedStep"}),": DISABLE"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Turbo Mode"}),": DISABLE"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"CPU AES"}),": ENABLE"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SGX Auto MP Registration"}),": ENABLE"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"ensure-clock-synchronization",children:"Ensure Clock Synchronization"}),"\n",(0,r.jsx)(n.p,{children:"Due to additional sanity checks within runtime enclaves, you should ensure that\nthe node's local clock is synchronized (e.g. using NTP). If it is off by more\nthan half a second you may experience unexpected runtime aborts."}),"\n",(0,r.jsx)(n.h3,{id:"ensure-proper-sgx-device-permissions",children:"Ensure Proper SGX Device Permissions"}),"\n",(0,r.jsxs)(n.p,{children:["Make sure that the user that is running the Oasis Node binary has access to the\nSGX device (e.g. ",(0,r.jsx)(n.code,{children:"/dev/sgx_enclave"}),"). This can usually be achieved by adding\nthe user into the right group, for example in case the permissions of the SGX\ndevice are as follows:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"crw-rw---- 1 root sgx 10, 125 Oct 28 09:28 /dev/sgx_enclave\n"})}),"\n",(0,r.jsxs)(n.p,{children:["and the user running Oasis Node is ",(0,r.jsx)(n.code,{children:"oasis"}),", you can do:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo adduser oasis sgx\n"})}),"\n",(0,r.jsx)(n.p,{children:'Failure to do so may result in the "permission denied OS error 13" during\nruntime startup.'}),"\n",(0,r.jsx)(n.p,{children:"If you are planning to run your node from an interactive session, make sure to\nlog out for permissions to take effect."}),"\n",(0,r.jsx)(n.h3,{id:"aesm-service",children:"AESM Service"}),"\n",(0,r.jsxs)(n.p,{children:["To allow execution of SGX enclaves, several ",(0,r.jsx)(n.strong,{children:"Architectural Enclaves (AE)"})," are\ninvolved (i.e. Launch Enclave, Provisioning Enclave, Provisioning Certificate\nEnclave, Quoting Enclave, Platform Services Enclaves)."]}),"\n",(0,r.jsxs)(n.p,{children:["Communication between application-spawned SGX enclaves and Intel-provided\nArchitectural Enclaves is through ",(0,r.jsx)(n.strong,{children:"Application Enclave Service Manager\n(AESM)"}),". AESM runs as a daemon and provides a socket through which applications\ncan facilitate various SGX services such as launch approval, remote attestation\nquote signing, etc."]}),"\n",(0,r.jsx)(n.p,{children:"Oasis node requires the use of DCAP attestation. To see if your system supports\nit, run the following:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:' cpuid -1  | grep "SGX"\n'})}),"\n",(0,r.jsx)(n.p,{children:"and look for the following line:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"      SGX_LC: SGX launch config supported      = true\n"})}),"\n",(0,r.jsx)(n.h3,{id:"dcap-attestation",children:"DCAP Attestation"}),"\n",(0,r.jsx)(n.h4,{id:"ubuntu-2204",children:"Ubuntu 22.04+"}),"\n",(0,r.jsxs)(n.p,{children:["A convenient way to install the AESM service on Ubuntu 22.04 systems\nis to use the Intel's ",(0,r.jsx)(n.a,{href:"https://download.01.org/intel-sgx/sgx_repo/",children:"official Intel SGX APT repository"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"First add Intel SGX APT repository to your system:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'curl -fsSL https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key | sudo gpg --dearmor -o /usr/share/keyrings/intel-sgx-deb.gpg\necho "deb [arch=amd64 signed-by=/usr/share/keyrings/intel-sgx-deb.gpg] https://download.01.org/intel-sgx/sgx_repo/ubuntu $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/intel-sgx.list > /dev/null\n'})}),"\n",(0,r.jsxs)(n.p,{children:["And then install the ",(0,r.jsx)(n.code,{children:"sgx-aesm-service"}),", ",(0,r.jsx)(n.code,{children:"libsgx-aesm-ecdsa-plugin"}),", ",(0,r.jsx)(n.code,{children:"libsgx-aesm-quote-ex-plugin"})," and ",(0,r.jsx)(n.code,{children:"libsgx-dcap-default-qpl"})," packages:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo apt update\nsudo apt install sgx-aesm-service libsgx-aesm-ecdsa-plugin libsgx-aesm-quote-ex-plugin libsgx-dcap-default-qpl\n"})}),"\n",(0,r.jsx)(n.p,{children:"The AESM service should be up and running. To confirm that, use:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo systemctl status aesmd.service\n"})}),"\n",(0,r.jsx)(n.h4,{id:"configuring-the-quote-provider",children:"Configuring the Quote Provider"}),"\n",(0,r.jsxs)(n.p,{children:["The Intel Quote Provider (",(0,r.jsx)(n.code,{children:"libsgx-dcap-default-qpl"}),") needs to be configured in\norder to use either the Intel PCS, the PCCS of your cloud service provider, or\nyour own PCCS. The configuration file is located at ",(0,r.jsx)(n.code,{children:"/etc/sgx_default_qcnl.conf"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Make sure to always restart the ",(0,r.jsx)(n.code,{children:"aesmd.service"})," after updating the\nconfiguration, via:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo systemctl restart aesmd.service\n"})}),"\n",(0,r.jsx)(n.h5,{id:"intel-pcs",children:"Intel PCS"}),"\n",(0,r.jsxs)(n.p,{children:["Using the Intel PCS is the simplest and most generic way, but it may be less\nreliable than using your own PCCS. Some cloud providers (see the ",(0,r.jsx)(n.a,{href:"#cloud-service-providers-pccs",children:"following section"}),")\nalso require you to use their PCCS."]}),"\n",(0,r.jsxs)(n.p,{children:["To use Intel PCS update the ",(0,r.jsx)(n.code,{children:"pccs_url"})," value in ",(0,r.jsx)(n.code,{children:"/etc/sgx_default_qcnl.conf"}),"\nto the Intel PCS API URL:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'  //PCCS server address\n  "pccs_url": "https://api.trustedservices.intel.com/sgx/certification/v4/"\n'})}),"\n",(0,r.jsxs)(n.admonition,{type:"tip",children:[(0,r.jsx)(n.p,{children:"In case there is an error in the QPL configuration file, attestation will refuse\nto work and the AESM service may produce unhelpful errors like the following:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Couldn't find the platform library. (null)\n"})}),(0,r.jsxs)(n.p,{children:["The only thing that needs to be changed is the ",(0,r.jsx)(n.code,{children:"pccs_url"})," value above. ",(0,r.jsx)(n.strong,{children:"Do not\nadd any comments and/or modify punctuation as these could make the configuration\nfile invalid."})]})]}),"\n",(0,r.jsx)(n.h5,{id:"cloud-service-providers-pccs",children:"Cloud Service Provider's PCCS"}),"\n",(0,r.jsx)(n.p,{children:"Some cloud providers require you to use their PCCS."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Azure: See the ",(0,r.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/azure/security/fundamentals/trusted-hardware-identity-management#how-do-i-use-intel-qpl-with-trusted-hardware-identity-management",children:"Azure documentation"})," for details on configuring the quote provider. The documentation\ncontains an example of an Intel QPL configuration file that can be used."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Alibaba Cloud: See the ",(0,r.jsx)(n.a,{href:"https://www.alibabacloud.com/help/en/ecs/user-guide/build-an-sgx-encrypted-computing-environment",children:"Alibaba Cloud documentation"})," for details on configuring the quote provider. The\ndocumentation shows the required ",(0,r.jsx)(n.code,{children:"sgx_default_qcnl.conf"})," changes."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["IBM Cloud: See the ",(0,r.jsx)(n.a,{href:"https://cloud.ibm.com/docs/vpc?topic=vpc-about-attestation-sgx-dcap-vpc",children:"IBM Cloud documentation"})," for details on configuring the quote provider. The\ndocumentation shows the required ",(0,r.jsx)(n.code,{children:"sgx_default_qcnl.conf"})," changes."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Other cloud providers: If you are using a different cloud service provider, consult their\nspecific documentation for the appropriate PCCS configuration and guidance on configuring the quote provider, or\nuse one of the other PCCS options."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h5,{id:"own-pccs",children:"Own PCCS"}),"\n",(0,r.jsxs)(n.p,{children:["It is also possible to run PCCS yourself. Follow ",(0,r.jsx)(n.a,{href:"https://www.intel.com/content/www/us/en/developer/articles/guide/intel-software-guard-extensions-data-center-attestation-primitives-quick-install-guide.html",children:"official Intel instructions"})," on how to setup your own PCCS."]}),"\n",(0,r.jsx)(n.h4,{id:"dcap-attestation-docker",children:"DCAP Attestation Docker"}),"\n",(0,r.jsxs)(n.p,{children:["Alternatively, an easy way to install and run the AESM service on a ",(0,r.jsx)(n.a,{href:"https://docs.docker.com/engine/",children:"Docker"}),"-enabled\nsystem is to use ",(0,r.jsx)(n.a,{href:"https://github.com/oasisprotocol/oasis-core/pkgs/container/aesmd",children:"our AESM container image"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Executing the following command should (always) pull the latest version of our\nAESMD Docker container, map the SGX devices and ",(0,r.jsx)(n.code,{children:"/var/run/aesmd"})," directory\nand ensure AESM is running in the background (also automatically started on boot):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker run \\\n  --pull always \\\n  --detach \\\n  --restart always \\\n  --device /dev/sgx_enclave \\\n  --device /dev/sgx_provision \\\n  --volume /var/run/aesmd:/var/run/aesmd \\\n  --name aesmd \\\n  ghcr.io/oasisprotocol/aesmd-dcap:master\n"})}),"\n",(0,r.jsxs)(n.p,{children:["By default, the Intel Quote Provider in the docker container is configured to use the Intel PCS endpoint.\nTo override the Intel Quote Provider configuration within the container mount your own custom configuration using\nthe ",(0,r.jsx)(n.code,{children:"volume"})," flag."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker run \\\n  --pull always \\\n  --detach \\\n  --restart always \\\n  --device /dev/sgx_enclave \\\n  --device /dev/sgx_provision \\\n  --volume /var/run/aesmd:/var/run/aesmd \\\n  --volume /etc/sgx_default_qcnl.conf:/etc/sgx_default_qcnl.conf \\\n  --name aesmd \\\n  ghcr.io/oasisprotocol/aesmd-dcap:master\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The default Intel Quote Provider config is available in ",(0,r.jsx)(n.a,{href:"https://github.com/intel/SGXDataCenterAttestationPrimitives/blob/master/QuoteGeneration/qcnl/linux/sgx_default_qcnl.conf",children:"Intel SGX Github repository"}),"."]}),"\n",(0,r.jsx)(n.h4,{id:"multi-socket-systems",children:"Multi-socket Systems"}),"\n",(0,r.jsx)(n.p,{children:"Note that platform provisioning for multi-socket systems (e.g. systems with\nmultiple CPUs) is more complex, especially if one is using a hypervisor and\nrunning SGX workloads inside guest VMs. In this case additional provisioning may\nbe required to be performed on the host."}),"\n",(0,r.jsxs)(n.p,{children:["Note that the system must be booted in UEFI mode for provisioning to work as the\nprovisioning process uses UEFI variables to communicate with the BIOS. In\naddition the ",(0,r.jsx)(n.strong,{children:"SGX Auto MP Registration"})," BIOS configuration setting should be\nset to ",(0,r.jsx)(n.em,{children:"enabled"}),"."]}),"\n",(0,r.jsx)(n.h5,{id:"ubuntu-2204-1",children:"Ubuntu 22.04+"}),"\n",(0,r.jsx)(n.p,{children:"To provision and register your multi-socket system you need to install the Intel\nSGX Multi-Package Registration Agent Service as follows (assuming Intel's SGX\napt repository has been added as discussed above):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"sudo apt install sgx-ra-service\n"})}),"\n",(0,r.jsxs)(n.p,{children:["After boot, the log in ",(0,r.jsx)(n.code,{children:"/var/log/mpa_registration.log"})," should indicate\nsuccessful registration. If an error is reported, make sure that you have\nenabled SGX Auto MP Registration in the BIOS as mentioned above. You can also\nperform re-provisioning by rebooting and setting the ",(0,r.jsx)(n.strong,{children:"SGX Factory Reset"}),"\noption to ",(0,r.jsx)(n.em,{children:"enabled"}),"."]}),"\n",(0,r.jsx)(n.h5,{id:"vmware-vsphere-80",children:"VMware vSphere 8.0+"}),"\n",(0,r.jsxs)(n.p,{children:["In order to enable SGX remote attestation on VMware vSphere-based systems,\nplease follow ",(0,r.jsx)(n.a,{href:"https://docs.vmware.com/en/VMware-vSphere/8.0/vsphere-vcenter-esxi-management/GUID-F16476FD-3B66-462F-B7FB-A456BEDC3549.html",children:"the vSphere guide"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"migrate-from-epid-attestation-to-dcap-attestation",children:"Migrate from EPID Attestation to DCAP Attestation"}),"\n",(0,r.jsx)(n.p,{children:"EPID attestation will be discontinued in 2025 and will no longer be available on\nany processors. All nodes using EPID attestation must migrate to DCAP\nattestation."}),"\n",(0,r.jsx)(n.p,{children:"For transitioning to the DCAP attestation, follow these steps:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["See if your system ",(0,r.jsx)(n.a,{href:"#aesm-service",children:"supports DCAP attestation"}),". If your hardware does not\nsupport DCAP attestation, you'll need to migrate your node to newer hardware."]}),"\n",(0,r.jsx)(n.li,{children:"Transition to DCAP attestation:"}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["In case you are running AESM service on Docker follow ",(0,r.jsx)(n.a,{href:"#dcap-attestation-docker",children:"these instructions"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Otherwise manually configure AESM service to use DCAP attestation:","\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Remove any leftover EPID attestation packages. If running on Ubuntu 22.04 run\nthe following command:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"  sudo apt remove libsgx-aesm-launch-plugin libsgx-aesm-epid-plugin\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsxs)(n.li,{children:["Configure AESM service to use ",(0,r.jsx)(n.a,{href:"#dcap-attestation",children:"DCAP attestation"})]}),"\n",(0,r.jsx)(n.li,{children:"Restart the AESM service. If running on Ubuntu 22.04 run the following\ncommand:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo systemctl restart aesmd.service\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#configuring-the-quote-provider",children:"Configure the Quote Provider"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Use the ",(0,r.jsx)(n.a,{href:"#check-sgx-setup",children:"attestation tool"})," to test if your settings are correct."]}),"\n",(0,r.jsxs)(n.li,{children:["Restart your compute node and verify that node is ",(0,r.jsx)(n.code,{children:"ready"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"check-sgx-setup",children:"Check SGX Setup"}),"\n",(0,r.jsxs)(n.p,{children:["To test if your settings are correct, you may use the [Oasis attestation\ntool][attestation-tool] (",(0,r.jsx)(n.a,{href:"https://github.com/oasisprotocol/tools/releases",children:"binary"}),") for testing remote attestation against Intel SGX's\ndevelopment server."]}),"\n",(0,r.jsx)(n.h2,{id:"tdx",children:"Trust Domain Extensions (TDX)"}),"\n",(0,r.jsxs)(n.p,{children:["Before proceeding with the TDX installation, ",(0,r.jsx)(n.strong,{children:"make sure you followed the SGX\ninstallation steps above and you have a working SGX environment"}),"!"]}),"\n",(0,r.jsx)(n.h3,{id:"tdx-bios-configuration",children:"BIOS configuration"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SGX"}),": ENABLE"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SGX memory"}),": at least 256MB"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SGX Auto MP Registration"}),": ENABLE"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Hyper-Threading"}),": DISABLE"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Intel SpeedStep"}),": DISABLE"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SecureBoot"}),": DISABLE"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"All Internal Graphics"}),": DISABLE"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Turbo Mode"}),": DISABLE"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"CPU AES"}),": ENABLE"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TDX"}),": ENABLE"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Memory Encryption (TME)"}),": ENABLE"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Total Memory Encryption Bypass"}),": ENABLE"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Total Memory Encryption Multi-Tenant (TME-MT)"}),": ENABLE"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TME-MT memory integrity"}),": DISABLE"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TDX Secure Arbitration Mode Loader (SEAM Loader)"}),": ENABLE"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TME-MT/TDX key split"}),": non-zero value"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ACPI S3 and deeper power states"}),": DISABLED"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"host-os-setup",children:"Host OS setup"}),"\n",(0,r.jsxs)(n.p,{children:["The following section contains summarized instructions for setting up an\nenvironment for running ROFL node and other TDX services on Ubuntu 24.04 or\nlater. Check out the official ",(0,r.jsx)(n.a,{href:"https://github.com/canonical/tdx",children:"Canonical TDX repository"})," for details."]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Add the following TDX PPAs to your APT sources and the keyring:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"sudo add-apt-repository ppa:kobuk-team/tdx-release\nsudo add-apt-repository ppa:kobuk-team/tdx-attestation-release\nsudo apt update\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Install the TDX quote generation service and QEMU for running\nguest virtual machines:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"sudo apt install tdx-qgs qemu-utils qemu-system-x86\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Install a special TDX-enabled Linux kernel:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"sudo apt install linux-image-intel\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Disable ACPI S3 (add kernel parameter: ",(0,r.jsx)(n.code,{children:"nohibernate"}),"):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'sed -i -E "s/GRUB_CMDLINE_LINUX=\\"(.*)\\"/GRUB_CMDLINE_LINUX=\\"\\1 nohibernate\\"/g" /etc/default/grub\nupdate-grub\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Make sure the non-root user running Oasis-node is a member of ",(0,r.jsx)(n.code,{children:"sgx"}),",\n",(0,r.jsx)(n.code,{children:"sgx_prv"})," and ",(0,r.jsx)(n.code,{children:"kvm"})," groups on host (access to ",(0,r.jsx)(n.code,{children:"/dev/sgx*"}),", ",(0,r.jsx)(n.code,{children:"/dev/kvm*"})," and\n",(0,r.jsx)(n.code,{children:"/dev/*vsock*"})," devices)."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Reboot your system and select the new ",(0,r.jsx)(n.code,{children:"-intel"})," kernel."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.admonition,{type:"tip",children:[(0,r.jsx)(n.p,{children:"If you don't have access to the grub selector during machine startup, you can\nalso detect and set the correct default kernel by executing the script below\nwith elevated privileges:"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'export KERNEL_RELEASE=$(apt show "linux-image-intel" 2>&1 | gawk \'match($0, /Depends:.* linux-image-([^, ]+)/, a) {print a[1]}\')\nif [ -z "${KERNEL_RELEASE}" ]; then\n    echo "ERROR : unable to determine kernel release"\n    exit 1\nfi\nMID=$(awk \'/Advanced options for Ubuntu/{print $(NF-1)}\' /boot/grub/grub.cfg | cut -d\\\' -f2)\nKID=$(awk "/with Linux $KERNEL_RELEASE/"\'{print $(NF-1)}\' /boot/grub/grub.cfg | cut -d\\\' -f2 | head -n1)\ncat > /etc/default/grub.d/99-tdx-kernel.cfg <<EOF\nGRUB_DEFAULT=saved\nGRUB_SAVEDEFAULT=true\nEOF\ngrub-editenv /boot/grub/grubenv set saved_entry="${MID}>${KID}"\nupdate-grub\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"check-tdx-setup",children:"Check TDX Setup"}),"\n",(0,r.jsx)(n.p,{children:"To check whether your system is ready to launch TDX VMs, you should see an\noutput like this:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"sudo dmesg | grep -i tdx\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"[    1.368184] virt/tdx: BIOS enabled: private KeyID range [32, 64)\n[    1.368188] virt/tdx: Disable ACPI S3. Turn off TDX in the BIOS to use ACPI S3.\n[    9.483666] virt/tdx: TDX module: attributes 0x0, vendor_id 0x8086, major_version 1, minor_version 5, build_date 20240725, build_num 784\n[    9.483672] virt/tdx: CMR: [0x100000, 0x77800000)\n[    9.483674] virt/tdx: CMR: [0x100000000, 0x3ffe000000)\n[   10.587167] virt/tdx: 1042424 KB allocated for PAMT\n[   10.587173] virt/tdx: module initialized\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"ls -al /dev/*kvm*\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"crw-rw---- 1 root kvm 10, 232 Apr 10 09:56 /dev/kvm\n"})}),"\n",(0,r.jsx)(n.p,{children:"If any of the above is missing, then the following debug tools may help you:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"apt install msr-tools\ngit clone https://github.com/canonical/tdx && ./tdx/system-report.sh\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"### Model specific registers (MSRs)\nMK_TME_ENABLED bit: 1 (expected value: 1)\nSEAM_RR bit: 1 (expected value: 1)\nNUM_TDX_PRIV_KEYS: 20\nSGX_AND_MCHECK_STATUS: 0 (expected value: 0)\nProduction platform: Production (expected value: Production)\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"sudo rdmsr 0x503\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"0  # 0 if SGX in production mode\n"})}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/node/run-your-node/troubleshooting#tee",children:"the TEE troubleshooting section"})," for a list of\nmost common errors and solutions."]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);