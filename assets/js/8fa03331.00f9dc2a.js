"use strict";(globalThis.webpackChunkdocs_oasis_io=globalThis.webpackChunkdocs_oasis_io||[]).push([[8104],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>d});var s=t(96540);const i={},o=s.createContext(i);function a(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(o.Provider,{value:n},e.children)}},59789:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>d,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"node/run-your-node/advanced/sync-node-using-state-sync","title":"Using State Sync for Quick Bootstrapping","description":"The State Sync is a way to quickly bootstrap a full Oasis node (either a","source":"@site/docs/node/run-your-node/advanced/sync-node-using-state-sync.md","sourceDirName":"node/run-your-node/advanced","slug":"/node/run-your-node/advanced/sync-node-using-state-sync","permalink":"/node/run-your-node/advanced/sync-node-using-state-sync","draft":false,"unlisted":false,"editUrl":"https://github.com/oasisprotocol/docs/edit/main/docs/node/run-your-node/advanced/sync-node-using-state-sync.md","tags":[],"version":"current","lastUpdatedAt":1761867754000,"frontMatter":{"sidebar_custom_props":{}},"sidebar":"operators","previous":{"title":"Advanced","permalink":"/node/run-your-node/advanced"},"next":{"title":"Copy State from One Node to the Other","permalink":"/node/run-your-node/advanced/copy-state-from-one-node-to-the-other"}}');var i=t(74848),o=t(28453);const a={sidebar_custom_props:{tags:void 0}},d="Using State Sync for Quick Bootstrapping",r={},h=[{value:"Obtaining Trusted Period",id:"obtaining-trusted-period",level:3},{value:"Obtaining Trusted Height and Hash",id:"obtaining-trusted-height-and-hash",level:3},{value:"Block Explorers",id:"block-explorers",level:4},{value:"A Trusted Node",id:"a-trusted-node",level:4},{value:"Public Rosetta Gateway",id:"public-rosetta-gateway",level:4},{value:"Oasis CLI",id:"oasis-cli",level:4}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"using-state-sync-for-quick-bootstrapping",children:"Using State Sync for Quick Bootstrapping"})}),"\n",(0,i.jsxs)(n.p,{children:["The State Sync is a way to ",(0,i.jsx)(n.strong,{children:"quickly bootstrap"})," a ",(0,i.jsx)(n.strong,{children:"full Oasis node"})," (either a\n",(0,i.jsx)(n.a,{href:"/node/run-your-node/validator-node",children:"validator node"})," or a\n",(0,i.jsx)(n.a,{href:"/node/run-your-node/non-validator-node",children:"non-validator node"}),") by initializing it from the\ntrusted block's header, identified by the trusted height and hash. The node's\ntrusted state is then securely updated by requesting and verifying a minimal set of\ndata (checkpoints metadata and chunks) from the P2P network. Internally, it uses\n",(0,i.jsx)(n.a,{href:"https://docs.cometbft.com/main/explanation/core/light-client",children:"CometBFT's Light Client protocol"})," and Merkle proofs to filter out invalid data."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["If you have access to an Oasis node that is synced with the latest height,\nanother option to speed bootstrapping a new Oasis node is to ",(0,i.jsx)(n.a,{href:"/node/run-your-node/advanced/copy-state-from-one-node-to-the-other",children:"copy state from one\nnode to the other"}),"."]})}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsxs)(n.p,{children:["CometBFT's Light Client protocol requires at least 1 full node to be correct\nto be able to ",(0,i.jsx)(n.a,{href:"https://docs.cometbft.com/main/explanation/core/light-client#where-to-obtain-trusted-height--hash",children:"detect and submit evidence for a light client attack"}),"."]})}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"After a successful state sync it is always recommended to check if you see\nthe same chain as other nodes. This can be done by comparing block hash at\na recent height with sources that you trust: e.g. your own nodes, trusted nodes\nfrom external entity, block explorers, etc."})}),"\n",(0,i.jsxs)(n.p,{children:["To configure your node to use the state sync, amend your node's configuration\n(i.e. ",(0,i.jsx)(n.code,{children:"config.yml"}),") with (non-relevant fields omitted):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'... trimmed ...\n\n# Consensus.\nconsensus:\n\n  ... trimmed ...\n\n  # Enable consensus state sync (i.e. CometBFT light client sync).\n  state_sync:\n    enabled: true\n  # Configure trusted period, height and hash for the light client.\n  light_client:\n    trust:\n      period: {{ trusted_period }}\n      height: {{ trusted_height }}\n      hash: "{{ trusted_height_hash }}"\n\n... trimmed ...\n\n'})}),"\n",(0,i.jsx)(n.p,{children:"and replace the following variables in the configuration snippet:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"{{ trusted_period }}"}),": Trusted period is the duration for which trust remains valid."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"{{ trusted_height }}"}),": Trusted height defines the height at which your node should trust the chain."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"{{ trusted_height_hash }}"}),": Trusted height hash defines the hash of the block header corresponding to the trusted height."]}),"\n"]}),"\n",(0,i.jsxs)(n.admonition,{type:"danger",children:[(0,i.jsxs)(n.p,{children:["You need to ",(0,i.jsx)(n.strong,{children:"delete any existing node state"})," (if it exists), otherwise the\nstate sync will be skipped. To do that, follow the ",(0,i.jsx)(n.a,{href:"/node/run-your-node/maintenance/wiping-node-state#state-wipe-and-keep-node-identity",children:"Wiping Node State"}),"\ninstructions."]}),(0,i.jsx)(n.p,{children:"If existing node state is found and state sync is skipped, you will see\nsomething like the following in your node's logs:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'{"caller":"full.go:709","level":"info","module":"cometbft","msg":"state sync enabled","ts":"2023-11-16T20:06:58.56502593Z"}\n{"caller":"node.go:770","level":"info","module":"cometbft:base","msg":"Found local state with non-zero height, skipping state sync","ts":"2023-11-16T20:06:59.22387592Z"}\n'})})]}),"\n",(0,i.jsx)(n.h3,{id:"obtaining-trusted-period",children:"Obtaining Trusted Period"}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsx)(n.p,{children:"To prevent long-range attacks it is recommended that the light client trust period\nis shorter than the debonding period (currently 336 epochs or ~14 days). If you\ntrust a header older than the debonding period, you risk accepting invalid headers\nfrom nodes that have already withdrawn their stake. Such nodes can no longer be\npenalized for their misbehaviour and you may be tricked into following the wrong chain."})}),"\n",(0,i.jsxs)(n.p,{children:["We recommend using ",(0,i.jsx)(n.code,{children:"trust_period=288h"})," (12 days). This way the time required\nto verify headers, submit possible misbehavior evidence and penalize nodes\nis still less than the debonding period, giving nodes strong incentive not to lie."]}),"\n",(0,i.jsx)(n.h3,{id:"obtaining-trusted-height-and-hash",children:"Obtaining Trusted Height and Hash"}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsx)(n.p,{children:"Currently, checkpoints happen approximately once per week. It is important to set\nsufficiently old trusted height and hash, so that the network has at least one\ncheckpoint that is more recent than the configured trust."})}),"\n",(0,i.jsx)(n.p,{children:"We recommend configuring trusted header that is around 10 days old. This way\nthere will be checkpoints available and the trust will still be shorter than\nthe debonding period."}),"\n",(0,i.jsx)(n.p,{children:"To obtain the trusted height and the corresponding block header's hash, use one\nof the following options."}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"If using centralized or untrusted sources it is always recommended to\nfetch and compare data from multiple sources."})}),"\n",(0,i.jsx)(n.h4,{id:"block-explorers",children:"Block Explorers"}),"\n",(0,i.jsxs)(n.p,{children:["Browse to one of our block explorers (e.g. ",(0,i.jsx)(n.a,{href:"https://explorer.oasis.io/",children:"Oasis Explorer"}),", ",(0,i.jsx)(n.a,{href:"https://www.oasisscan.com",children:"Oasis Scan"}),") and\nobtain the trusted height and hash there:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Obtain the block height (10 days old) from the main page, e.g. 4819139."}),"\n",(0,i.jsxs)(n.li,{children:["Click on block height's number to view the block's details and obtain its\nhash, e.g. ",(0,i.jsx)(n.code,{children:"377520acaf7b8011b95686b548504a973aa414abba2db070b6a85725dec7bd21"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"a-trusted-node",children:"A Trusted Node"}),"\n",(0,i.jsx)(n.p,{children:"If you have an existing node that you trust, you can use its status output to\nretrieve the current block height and hash by running:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"oasis-node control status -a unix:/node/data/internal.sock\n"})}),"\n",(0,i.jsx)(n.p,{children:"This will give you output like the following (non-relevant fields omitted):"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "software_version": "23.0.5",\n  "identity": {\n    ...\n  },\n  "consensus": {\n    ...\n    "latest_height": 18466200,\n    "latest_hash": "9611c81c7e231a281f1de491047a833364f97c38142a80abd65ce41bce123378",\n    "latest_time": "2023-11-27T08:31:15Z",\n    "latest_epoch": 30760,\n    ...\n  },\n  ...\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["the values you need are ",(0,i.jsx)(n.code,{children:"latest_height"})," and ",(0,i.jsx)(n.code,{children:"latest_hash"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"public-rosetta-gateway",children:"Public Rosetta Gateway"}),"\n",(0,i.jsx)(n.p,{children:"First obtain the network's Genesis document's hash (e.g. from the Networks Parameters Page):"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://docs.oasis.io/node/mainnet/",children:"Mainnet"}),": ",(0,i.jsx)(n.code,{children:"bb3d748def55bdfb797a2ac53ee6ee141e54cd2ab2dc2375f4a0703a178e6e55"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://docs.oasis.io/node/testnet/",children:"Testnet"}),": ",(0,i.jsx)(n.code,{children:"0b91b8e4e44b2003a7c5e23ddadb5e14ef5345c0ebcb3ddcae07fa2f244cab76"})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Query our public Rosetta Gateway instance and obtain the latest height by\nreplacing the ",(0,i.jsx)(n.code,{children:"<chain-context>"})," with the value obtained in the previous step:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X POST https://rosetta.oasis.io/api/block \\\n-H "Content-Type: application/json" \\\n-d \'{\n    "network_identifier": {\n        "blockchain": "Oasis",\n        "network": "<chain-context>"\n    },\n    "block_identifier": {\n        "index": 0\n    }\n}\'\n'})}),"\n",(0,i.jsx)(n.p,{children:"This will give you output like the following (non-relevant fields omitted):"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n\t"block": {\n\t\t"block_identifier": {\n\t\t\t"index": 25688638,\n\t\t\t"hash": "3076ae195cfeda09ad49a6c74f6f655bc623e526184f814a842b224bf1846223"\n\t\t},\n    ...\n\t}\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Assuming blocks happen every 6 seconds, subtract around ",(0,i.jsx)(n.code,{children:"140_000"})," blocks to\nget the height that is around 10 days old and query again:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X POST https://rosetta.oasis.io/api/block \\\n-H "Content-Type: application/json" \\\n-d \'{\n    "network_identifier": {\n        "blockchain": "Oasis",\n        "network": "<chain-context>"\n    },\n    "block_identifier": {\n        "index": 25548638\n    }\n}\'\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The values you need are ",(0,i.jsx)(n.code,{children:"index"})," and ",(0,i.jsx)(n.code,{children:"hash"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n\t"block": {\n\t\t"block_identifier": {\n\t\t\t"index": 25548638,\n\t\t\t"hash": "76ac9d6b59e662d024097a07eb65777292ce6a7ebe9aca8bd0caf73e72b06834"\n\t\t},\n    ...\n\t}\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"oasis-cli",children:"Oasis CLI"}),"\n",(0,i.jsx)(n.p,{children:"Query our public Oasis node's endpoint using the Oasis CLI and obtain the\ntrusted height and hash there:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"oasis network status\n"})}),"\n",(0,i.jsx)(n.p,{children:"This will give you output like the following (non-relevant fields omitted):"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "software_version": "23.0.5",\n  "identity": {\n    ...\n  },\n  "consensus": {\n    ...\n    "latest_height": 18466200,\n    "latest_hash": "9611c81c7e231a281f1de491047a833364f97c38142a80abd65ce41bce123378",\n    "latest_time": "2023-11-27T08:31:15Z",\n    "latest_epoch": 30760,\n    ...\n  },\n  ...\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The values you need are ",(0,i.jsx)(n.code,{children:"latest_height"})," and ",(0,i.jsx)(n.code,{children:"latest_hash"})," ."]})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);