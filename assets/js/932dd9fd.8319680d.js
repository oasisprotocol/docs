"use strict";(globalThis.webpackChunkdocs_oasis_io=globalThis.webpackChunkdocs_oasis_io||[]).push([[2034],{11470:(e,n,s)=>{s.d(n,{A:()=>k});var a=s(96540),t=s(34164),r=s(17559),i=s(23104),o=s(56347),l=s(205),c=s(57485),d=s(31682),h=s(70679);function p(e){return a.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function u(e){const{values:n,children:s}=e;return(0,a.useMemo)(()=>{const e=n??function(e){return p(e).map(({props:{value:e,label:n,attributes:s,default:a}})=>({value:e,label:n,attributes:s,default:a}))}(s);return function(e){const n=(0,d.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,s])}function m({value:e,tabValues:n}){return n.some(n=>n.value===e)}function g({queryString:e=!1,groupId:n}){const s=(0,o.W6)(),t=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,c.aZ)(t),(0,a.useCallback)(e=>{if(!t)return;const n=new URLSearchParams(s.location.search);n.set(t,e),s.replace({...s.location,search:n.toString()})},[t,s])]}function x(e){const{defaultValue:n,queryString:s=!1,groupId:t}=e,r=u(e),[i,o]=(0,a.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const s=n.find(e=>e.default)??n[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:r})),[c,d]=g({queryString:s,groupId:t}),[p,x]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[s,t]=(0,h.Dv)(n);return[s,(0,a.useCallback)(e=>{n&&t.set(e)},[n,t])]}({groupId:t}),y=(()=>{const e=c??p;return m({value:e,tabValues:r})?e:null})();(0,l.A)(()=>{y&&o(y)},[y]);return{selectedValue:i,selectValue:(0,a.useCallback)(e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);o(e),d(e),x(e)},[d,x,r]),tabValues:r}}var y=s(92303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=s(74848);function j({className:e,block:n,selectedValue:s,selectValue:a,tabValues:r}){const o=[],{blockElementScrollPositionUntilNextRender:l}=(0,i.a_)(),c=e=>{const n=e.currentTarget,t=o.indexOf(n),i=r[t].value;i!==s&&(l(n),a(i))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const s=o.indexOf(e.currentTarget)+1;n=o[s]??o[0];break}case"ArrowLeft":{const s=o.indexOf(e.currentTarget)-1;n=o[s]??o[o.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":n},e),children:r.map(({value:e,label:n,attributes:a})=>(0,b.jsx)("li",{role:"tab",tabIndex:s===e?0:-1,"aria-selected":s===e,ref:e=>{o.push(e)},onKeyDown:d,onClick:c,...a,className:(0,t.A)("tabs__item",f.tabItem,a?.className,{"tabs__item--active":s===e}),children:n??e},e))})}function v({lazy:e,children:n,selectedValue:s}){const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=r.find(e=>e.props.value===s);return e?(0,a.cloneElement)(e,{className:(0,t.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:r.map((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==s}))})}function w(e){const n=x(e);return(0,b.jsxs)("div",{className:(0,t.A)(r.G.tabs.container,"tabs-container",f.tabList),children:[(0,b.jsx)(j,{...n,...e}),(0,b.jsx)(v,{...n,...e})]})}function k(e){const n=(0,y.A)();return(0,b.jsx)(w,{...e,children:p(e.children)},String(n))}},12111:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>l,metadata:()=>a,toc:()=>h});const a=JSON.parse('{"id":"build/sapphire/develop/gasless","title":"Gasless Transactions","description":"Sign and submit transactions without paying for fees","source":"@site/docs/build/sapphire/develop/gasless.md","sourceDirName":"build/sapphire/develop","slug":"/build/sapphire/develop/gasless","permalink":"/build/sapphire/develop/gasless","draft":false,"unlisted":false,"editUrl":"https://github.com/oasisprotocol/sapphire-paratime/edit/main/docs/develop/gasless.md","tags":[],"version":"current","lastUpdatedAt":1760874442000,"frontMatter":{"description":"Sign and submit transactions without paying for fees","sidebar_custom_props":{}},"sidebar":"developers","previous":{"title":"View-Call Authentication","permalink":"/build/sapphire/develop/authentication"},"next":{"title":"Deployment Patterns","permalink":"/build/sapphire/develop/deployment"}}');var t=s(74848),r=s(28453),i=s(11470),o=s(19365);const l={description:"Sign and submit transactions without paying for fees",sidebar_custom_props:{tags:void 0}},c="Gasless Transactions",d={},h=[{value:"On-Chain Signer",id:"on-chain-signer",level:2},{value:"EIP155Signer",id:"eip155signer",level:3},{value:"Gasless Proxy Contract",id:"gasless-proxy-contract",level:3},{value:"Simple Gasless Commenting dApp",id:"simple-gasless-commenting-dapp",level:3},{value:"Gasless Proxy in Production",id:"gasless-proxy-in-production",level:3},{value:"Confidentiality",id:"confidentiality",level:4},{value:"Gas Cost and Gas Limit",id:"gas-cost-and-gas-limit",level:4},{value:"Allowed Transactions",id:"allowed-transactions",level:4},{value:"Access Control",id:"access-control",level:4},{value:"Multiple Signers",id:"multiple-signers",level:4},{value:"Gas Station Network",id:"gas-station-network",level:2},{value:"Package Install",id:"package-install",level:3},{value:"Deploy GSN",id:"deploy-gsn",level:3},{value:"Start GSN Relay Server",id:"start-gsn-relay-server",level:3},{value:"Fund and Register GSN Relay Server",id:"fund-and-register-gsn-relay-server",level:3},{value:"Send Testing Relayed Requests:",id:"send-testing-relayed-requests",level:3},{value:"Writing a GSN-enabled Smart Contract",id:"writing-a-gsn-enabled-smart-contract",level:3}];function p(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",section:"section",strong:"strong",sup:"sup",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"gasless-transactions",children:"Gasless Transactions"})}),"\n",(0,t.jsxs)(n.p,{children:["When you submit a transaction to a blockchain, you need to pay certain fee\n(called ",(0,t.jsx)(n.em,{children:"gas"})," in Ethereum jargon). Since only the transactions with the highest\nfee will be included in the block, this mechanism effectively prevents denial\nof service attacks on the network. On the other hand, paying for gas requires\nfrom the user that they have certain amount of blockchain-native tokens\navailable in their wallet which may not be feasible."]}),"\n",(0,t.jsxs)(n.p,{children:["In this chapter we will learn how the user signs and sends their transaction to\na ",(0,t.jsx)(n.em,{children:"relayer"}),". The relayer then wraps the original signed transaction into a new\n",(0,t.jsx)(n.em,{children:"meta-transaction"})," (see ",(0,t.jsx)(n.a,{href:"https://eips.ethereum.org/EIPS/eip-2771",children:"ERC-2771"})," for details), signs it and pays for the\nnecessary transaction fees. When the transaction is submitted the on-chain\nrecipient contract decodes the meta-transaction, verifies both signatures and\nexecutes the original transaction."]}),"\n",(0,t.jsxs)(n.p,{children:["Oasis Sapphire supports two transaction relaying methods: The ",(0,t.jsx)(n.strong,{children:"on-chain\nsigner"})," is trustless and utilizes the Oasis-specific contract state encryption\nwhile the ",(0,t.jsx)(n.strong,{children:"gas station network"})," service is known from other blockchains as\nwell."]}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsx)(n.p,{children:"The gas station network implementation on Sapphire is still in early beta. Some\nfeatures such as the browser support are not fully implemented yet."})}),"\n",(0,t.jsx)(n.h2,{id:"on-chain-signer",children:"On-Chain Signer"}),"\n",(0,t.jsx)(n.p,{children:"The on-chain signer is a smart contract which:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"receives the user's transaction,"}),"\n",(0,t.jsx)(n.li,{children:"checks whether the transaction is valid,"}),"\n",(0,t.jsx)(n.li,{children:"wraps it into a meta-transaction (which includes paying for the transaction\nfee) and"}),"\n",(0,t.jsxs)(n.li,{children:["returns it back to the user in the ",(0,t.jsx)(n.a,{href:"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-155.md",children:"EIP-155"})," format."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The steps above are executed as a confidential read-only call. Finally, the user\nthen submits the obtained transaction to the network."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Diagram of the On-Chain Signing",src:s(56775).A+""})}),"\n",(0,t.jsx)(n.h3,{id:"eip155signer",children:"EIP155Signer"}),"\n",(0,t.jsxs)(n.p,{children:["To sign a transaction, the Sapphire's ",(0,t.jsx)(n.code,{children:"EIP155Signer"})," library bundled along the\n",(0,t.jsx)(n.code,{children:"@oasisprotocol/sapphire-contract"})," package comes with the following helper which\nreturns a raw, RLP-encoded, signed transaction ready to be broadcast:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-solidity",children:"function sign(address publicAddress, bytes32 secretKey, EthTx memory transaction) internal view returns (bytes memory);\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"publicAddress"})," and ",(0,t.jsx)(n.code,{children:"secretKey"})," are the signer's address and their private key\nused to sign a meta-transaction (and pay for the fees). We will store these\nsensitive data inside the encrypted smart contract state together with the\nsigner's ",(0,t.jsx)(n.code,{children:"nonce"})," field in the following struct:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-solidity",children:"struct EthereumKeypair {\n  address addr;\n  bytes32 secret;\n  uint64 nonce;\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The last ",(0,t.jsx)(n.code,{children:"transaction"})," parameter in the ",(0,t.jsx)(n.code,{children:"sign()"})," function is the transaction\nencoded in a format based on ",(0,t.jsx)(n.a,{href:"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-155.md",children:"EIP-155"}),". This can either be the original user's\ntransaction or a meta-transaction."]}),"\n",(0,t.jsx)(n.h3,{id:"gasless-proxy-contract",children:"Gasless Proxy Contract"}),"\n",(0,t.jsxs)(n.p,{children:["The following snippet is a complete ",(0,t.jsx)(n.em,{children:"Gasless"})," contract for wrapping the user's\ntransactions (",(0,t.jsx)(n.code,{children:"makeProxyTx()"}),") and executing them (",(0,t.jsx)(n.code,{children:"proxy()"}),"). The signer's\nprivate key containing enough balance to cover transaction fees should be\nprovided in the constructor."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-solidity",children:'import { encryptCallData } from "@oasisprotocol/sapphire-contracts/contracts/CalldataEncryption.sol";\nimport { EIP155Signer } from "@oasisprotocol/sapphire-contracts/contracts/EIP155Signer.sol";\n\nstruct EthereumKeypair {\n  address addr;\n  bytes32 secret;\n  uint64 nonce;\n}\n\nstruct EthTx {\n  uint64 nonce;\n  uint256 gasPrice;\n  uint64 gasLimit;\n  address to;\n  uint256 value;\n  bytes data;\n  uint256 chainId;\n}\n\n// Proxy for gasless transaction.\ncontract Gasless {\n  EthereumKeypair private kp;\n\n  function setKeypair(EthereumKeypair memory keypair) external payable {\n    kp = keypair;\n  }\n\n  function makeProxyTx(address innercallAddr, bytes memory innercall)\n  external\n  view\n  returns (bytes memory output)\n  {\n    bytes memory data = abi.encode(innercallAddr, innercall);\n\n    // Call will invoke proxy().\n    return\n      EIP155Signer.sign(\n        kp.addr,\n        kp.secret,\n        EIP155Signer.EthTx({\n          nonce: kp.nonce,\n          gasPrice: 100_000_000_000,\n          gasLimit: 250000,\n          to: address(this),\n          value: 0,\n          data: encryptCallData(abi.encodeCall(this.proxy, data)),\n          chainId: block.chainid\n        })\n      );\n  }\n\n  function proxy(bytes memory data) external payable {\n    (address addr, bytes memory subcallData) = abi.decode(\n      data,\n      (address, bytes)\n    );\n    (bool success, bytes memory outData) = addr.call{value: msg.value}(\n      subcallData\n    );\n    if (!success) {\n      // Add inner-transaction meaningful data in case of error.\n      assembly {\n        revert(add(outData, 32), mload(outData))\n      }\n    }\n    kp.nonce += 1;\n  }\n}\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["The snippet above only runs on Sapphire Mainnet, Testnet or Localnet.\n",(0,t.jsx)(n.a,{href:"https://api.docs.oasis.io/sol/sapphire-contracts/contracts/EIP155Signer.sol/library.EIP155Signer.html#sign",children:(0,t.jsx)(n.code,{children:"EIP155Signer.sign()"})})," is not supported on other EVM chains."]})}),"\n",(0,t.jsx)(n.h3,{id:"simple-gasless-commenting-dapp",children:"Simple Gasless Commenting dApp"}),"\n",(0,t.jsx)(n.p,{children:"Let's see how we can implement on-chain signer for a gasless commenting dApp\nlike this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-solidity",children:"contract CommentBox {\n  string[] public comments;\n\n  function comment(string memory commentText) external {\n    comments.push(commentText);\n  }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Then, the TypeScript code on a client side for submitting a comment in a gasless\nfashion would look like this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const CommentBox = await ethers.getContractFactory(\"CommentBox\");\nconst commentBox = await CommentBox.deploy();\nawait commentBox.waitForDeployment();\nconst Gasless = await ethers.getContractFactory(\"Gasless\");\nconst gasless = await Gasless.deploy();\nawait gasless.waitForDeployment();\n\n// Set the keypair used to sign the meta-transaction.\nawait gasless.setKeypair({\n  addr: \"70997970C51812dc3A010C7d01b50e0d17dc79C8\",\n  secret: Uint8Array.from(Buffer.from(\"59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d\", 'hex')),\n  nonce: 0,\n});\n\nconst innercall = commentBox.interface.encodeFunctionData('comment', ['Hello, free world!']);\nconst tx = await gasless.makeProxyTx(commentBox.address, innercall);\n\nconst plainProvider = new ethers.JsonRpcProvider(ethers.provider.connection);\nconst plainResp = await plainProvider.sendTransaction(tx);\n\nconst receipt = await ethers.provider.getTransactionReceipt(plainResp.hash);\nif (!receipt || receipt.status != 1) throw new Error('tx failed');\n"})}),"\n",(0,t.jsx)(n.admonition,{title:"Example: On-Chain Signer",type:"info",children:(0,t.jsxs)(n.p,{children:["You can download a complete on-chain signer example based on the above snippets\nfrom the ",(0,t.jsx)(n.a,{href:"https://github.com/oasisprotocol/sapphire-paratime/tree/main/examples/onchain-signer",children:"Sapphire ParaTime examples"})," repository."]})}),"\n",(0,t.jsx)(n.h3,{id:"gasless-proxy-in-production",children:"Gasless Proxy in Production"}),"\n",(0,t.jsx)(n.p,{children:"The snippets above have shown how the on-chain signer can generate and sign a\nmeta-transaction for arbitrary transaction. In production environment however,\nyou must consider the following:"}),"\n",(0,t.jsx)(n.h4,{id:"confidentiality",children:"Confidentiality"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"https://api.docs.oasis.io/sol/sapphire-contracts/contracts/CalldataEncryption.sol/function.encryptCallData.html#encryptcalldatabytes",children:(0,t.jsx)(n.code,{children:"encryptCallData()"})})," helper above will generate an ephemeral key and encrypt\nthe transaction's calldata. Omit this call to generate a plain transaction. You\ncan also explicitly encrypt specific function arguments of the inner-transaction\nby calling ",(0,t.jsx)(n.a,{href:"https://api.docs.oasis.io/sol/sapphire-contracts/contracts/Sapphire.sol/library.Sapphire.html#encrypt-1",children:(0,t.jsx)(n.code,{children:"Sapphire.encrypt()"})})," using a private key stored somewhere in your\nsmart contract and then ",(0,t.jsx)(n.a,{href:"https://api.docs.oasis.io/sol/sapphire-contracts/contracts/Sapphire.sol/library.Sapphire.html#decrypt-1",children:(0,t.jsx)(n.code,{children:"Sapphire.decrypt()"})})," when executing the transaction."]}),"\n",(0,t.jsx)(n.h4,{id:"gas-cost-and-gas-limit",children:"Gas Cost and Gas Limit"}),"\n",(0,t.jsxs)(n.p,{children:["The gas cost and the gas limit in our snippet were hardcoded inside the\ncontract. Ideally the gas cost should be dynamically adjusted by an oracle and\nthe gas limit determined based on the type of transactions. ",(0,t.jsx)(n.strong,{children:"Never let gas cost\nand limit to be freely defined by the user, since they can drain your relayer's\naccount."})]}),"\n",(0,t.jsx)(n.h4,{id:"allowed-transactions",children:"Allowed Transactions"}),"\n",(0,t.jsxs)(n.p,{children:["Your relayer will probably be used for transactions of a specific contract only.\nOne approach is to store the allowed address of the target contract and ",(0,t.jsx)(n.strong,{children:"only\nallow calls to this contract address"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"access-control",children:"Access Control"}),"\n",(0,t.jsxs)(n.p,{children:["You can either whitelist specific addresses of the users in the relayer contract\nor implement the access control in the target contract. In the latter case, the\nrelayer's ",(0,t.jsx)(n.code,{children:"makeProxyTx()"})," should simulate the execution of the inner-transaction\nand generate the meta-transaction only if it inner-transaction succeeded."]}),"\n",(0,t.jsx)(n.h4,{id:"multiple-signers",children:"Multiple Signers"}),"\n",(0,t.jsxs)(n.p,{children:["Only one transaction per block can be relayed by the same signer since the order\nof the transactions is not deterministic and nonces could mismatch. To overcome\nthis, relayer can randomly pick a signer from the ",(0,t.jsx)(n.strong,{children:"pool of signers"}),". When the\ntransaction is relayed, don't forget to reimburse the signer of the transaction!"]}),"\n",(0,t.jsx)(n.admonition,{title:"Example: Voting dApp",type:"info",children:(0,t.jsxs)(n.p,{children:["All the above points are considered in the ",(0,t.jsx)(n.a,{href:"https://github.com/oasisprotocol/demo-voting",children:"Demo Voting dApp"}),".\nYou can explore the code and also try out a deployed gasless version of the\nvoting dApp on the ",(0,t.jsx)(n.a,{href:"https://playground.oasis.io/demo-voting",children:"Oasis Playground site"}),". The access\ncontrol list is configured so that anyone can vote on any poll and only poll\ncreators can close the poll."]})}),"\n",(0,t.jsx)(n.h2,{id:"gas-station-network",children:"Gas Station Network"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://docs.opengsn.org",children:"Gas Station Network"})," (GSN) was adapted to work with\nSapphire in a forked ",(0,t.jsx)(n.code,{children:"@oasislabs/opengsn-cli"})," package. The diagram below\nillustrates a flow for signing a transaction by using a GSN",(0,t.jsx)(n.sup,{children:(0,t.jsx)(n.a,{href:"#user-content-fn-1",id:"user-content-fnref-1","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Diagram of the Gas Station Network Flow",src:s(93897).A+"",width:"1624",height:"927"})}),"\n",(0,t.jsx)(n.h3,{id:"package-install",children:"Package Install"}),"\n",(0,t.jsxs)(n.p,{children:["Starting with an empty folder, let us install the\n",(0,t.jsx)(n.a,{href:"https://github.com/oasislabs/gsn",children:"Oasis fork of the GSN command line tool"})," by\nusing the following commands:"]}),"\n",(0,t.jsxs)(i.A,{groupId:"npm2yarn",children:[(0,t.jsx)(o.A,{value:"npm",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"npm init\nnpm install -D @oasislabs/opengsn-cli\n"})})}),(0,t.jsx)(o.A,{value:"pnpm",label:"pnpm",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"pnpm init\npnpm add -D @oasislabs/opengsn-cli\n"})})}),(0,t.jsx)(o.A,{value:"yarn",label:"Yarn",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"yarn init\nyarn add --dev @oasislabs/opengsn-cli\n"})})})]}),"\n",(0,t.jsxs)(n.p,{children:["Next, we will export our hex-encoded private key (",(0,t.jsx)(n.strong,{children:"without"})," the leading ",(0,t.jsx)(n.code,{children:"0x"}),")\nfor deploying the gas station network as an environment variable:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"export PRIVATE_KEY=...\n"})}),"\n",(0,t.jsx)(n.h3,{id:"deploy-gsn",children:"Deploy GSN"}),"\n",(0,t.jsxs)(n.p,{children:["Deploy GSN relaying contracts along with the test paymaster using a\ntest token. Use the address of your account as ",(0,t.jsx)(n.code,{children:"--burnAddress"})," and\n",(0,t.jsx)(n.code,{children:"--devAddress"})," parameters:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"npx gsn deploy --network sapphire-testnet --burnAddress 0xfA3AC9f65C9D75EE3978ab76c6a1105f03156204 --devAddress 0xfA3AC9f65C9D75EE3978ab76c6a1105f03156204 --testToken true --testPaymaster true --yes --privateKeyHex $PRIVATE_KEY\n"})}),"\n",(0,t.jsx)(n.p,{children:"After the command finishes successfully, you should find the addreses of\ndeployed contracts at the end:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"  Deployed TestRecipient at address 0x594cd6354b23A5200a57355072E2A5B15354ee21\n  \n  RelayHub: 0xc4423AB6133B06e4e60D594Ac49abE53374124b3 \n  RelayRegistrar: 0x196036FBeC1dA841C60145Ce12b0c66078e141E6\n  StakeManager: 0x6763c3fede9EBBCFbE4FEe6a4DE6C326ECCdacFc\n  Penalizer: 0xA58A0D302e470490c064EEd5f752Df4095d3A002\n  Forwarder: 0x59001d07a1Cd4836D22868fcc0dAf3732E93be81\n  TestToken (test only): 0x6Ed21672c0c26Daa32943F7b1cA1f1d0ABdbac66\n  Paymaster (Default): 0x8C06261f58a024C958d42df89be7195c8690008d\n"})}),"\n",(0,t.jsx)(n.h3,{id:"start-gsn-relay-server",children:"Start GSN Relay Server"}),"\n",(0,t.jsx)(n.p,{children:"Now we are ready to start our own relay server by using the following command.\nUse the newly deployed:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"RelayHub"})," address for ",(0,t.jsx)(n.code,{children:"--relayHubAddress"}),","]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"TestToken"})," address for ",(0,t.jsx)(n.code,{children:"--managerStakeTokenAddress"}),","]}),"\n",(0,t.jsxs)(n.li,{children:["address of your account for ",(0,t.jsx)(n.code,{children:"--owner-address"})]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"npx gsn relayer-run --relayHubAddress 0xc4423AB6133B06e4e60D594Ac49abE53374124b3 --managerStakeTokenAddress  0x6Ed21672c0c26Daa32943F7b1cA1f1d0ABdbac66 --ownerAddress '0xfA3AC9f65C9D75EE3978ab76c6a1105f03156204' --ethereumNodeUrl 'https://testnet.sapphire.oasis.io' --workdir .\n"})}),"\n",(0,t.jsx)(n.h3,{id:"fund-and-register-gsn-relay-server",children:"Fund and Register GSN Relay Server"}),"\n",(0,t.jsxs)(n.p,{children:["The first thing is to fund your relay server so that it has enough native\ntokens to pay for others' transactions. Let's fund the paymaster with\n",(0,t.jsx)(n.strong,{children:"5 tokens"}),". Use the ",(0,t.jsx)(n.code,{children:"RelayHub"})," and ",(0,t.jsx)(n.code,{children:"Paymaster"})," addresses for ",(0,t.jsx)(n.code,{children:"--hub"}),"\nand ",(0,t.jsx)(n.code,{children:"--paymaster"})," values:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"npx gsn paymaster-fund --network sapphire-testnet --hub 0xc4423AB6133B06e4e60D594Ac49abE53374124b3 --paymaster 0x8C06261f58a024C958d42df89be7195c8690008d --privateKeyHex $PRIVATE_KEY --amount 5000000000000000000\n"})}),"\n",(0,t.jsx)(n.p,{children:"You can check the balance of the paymaster by running:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"npx gsn paymaster-balance --network sapphire-testnet --hub 0xc4423AB6133B06e4e60D594Ac49abE53374124b3  --paymaster 0x8C06261f58a024C958d42df89be7195c8690008d\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Next, we need to register the relay server with the your desired ",(0,t.jsx)(n.code,{children:"relayUrl"})," by\nstaking the ",(0,t.jsx)(n.code,{children:"token"})," the relayHub requires."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"npx gsn relayer-register --network sapphire-testnet --relayUrl 'http://localhost:8090' --token 0x6Ed21672c0c26Daa32943F7b1cA1f1d0ABdbac66 --wrap true --privateKeyHex $PRIVATE_KEY\n"})}),"\n",(0,t.jsx)(n.p,{children:"After this step, your relay server should be ready to take incoming relay\nrequests and forward them to the relay hub on Sapphire Testnet."}),"\n",(0,t.jsx)(n.h3,{id:"send-testing-relayed-requests",children:"Send Testing Relayed Requests:"}),"\n",(0,t.jsx)(n.p,{children:"We can test whether a relayed request can be forwarded and processed correctly.\nScroll up to find the GSN deployment response and use the following parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Forwarder"})," as ",(0,t.jsx)(n.code,{children:"--to"}),","]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Paymaster"})," as ",(0,t.jsx)(n.code,{children:"--paymaster"}),","]}),"\n",(0,t.jsxs)(n.li,{children:["your account address as ",(0,t.jsx)(n.code,{children:"--from"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Parameters matching our deployment would be:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"npx gsn send-request --network sapphire-testnet --abiFile 'node_modules/@oasislabs/opengsn-cli/dist/compiled/TestRecipient.json' --method emitMessage --methodParams 'hello world!' --to 0x594cd6354b23A5200a57355072E2A5B15354ee21 --paymaster 0x8C06261f58a024C958d42df89be7195c8690008d --privateKeyHex $PRIVATE_KEY --from 0xfA3AC9f65C9D75EE3978ab76c6a1105f03156204 --gasLimit 150000 --gasPrice 100\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["More detailed explanations of these GSN commands and parameters can be found on\nthe ",(0,t.jsx)(n.a,{href:"https://docs.opengsn.org/javascript-client/gsn-helpers.html",children:"upstream OpenGSN website"}),"."]})}),"\n",(0,t.jsx)(n.h3,{id:"writing-a-gsn-enabled-smart-contract",children:"Writing a GSN-enabled Smart Contract"}),"\n",(0,t.jsx)(n.p,{children:"First, install the OpenGSN contracts package:"}),"\n",(0,t.jsxs)(i.A,{groupId:"npm2yarn",children:[(0,t.jsx)(o.A,{value:"npm",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"npm install -D @opengsn/contracts@3.0.0-beta.2\n"})})}),(0,t.jsx)(o.A,{value:"pnpm",label:"pnpm",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"pnpm add -D @opengsn/contracts@3.0.0-beta.2\n"})})}),(0,t.jsx)(o.A,{value:"yarn",label:"Yarn",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"yarn add --dev @opengsn/contracts@3.0.0-beta.2\n"})})})]}),"\n",(0,t.jsxs)(n.p,{children:["Then follow the remainder of the steps from the\n",(0,t.jsx)(n.a,{href:"https://docs.opengsn.org/contracts/#receiving-a-relayed-call",children:"upstream OpenGSN docs"}),"."]}),"\n","\n",(0,t.jsxs)(n.section,{"data-footnotes":!0,className:"footnotes",children:[(0,t.jsx)(n.h2,{className:"sr-only",id:"footnote-label",children:"Footnotes"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{id:"user-content-fn-1",children:["\n",(0,t.jsxs)(n.p,{children:["The GSN flow diagram is courtesy of ",(0,t.jsx)(n.a,{href:"https://github.com/opengsn/docs",children:"OpenGSN documentation"}),". ",(0,t.jsx)(n.a,{href:"#user-content-fnref-1","data-footnote-backref":"","aria-label":"Back to reference 1",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},19365:(e,n,s)=>{s.d(n,{A:()=>i});s(96540);var a=s(34164);const t={tabItem:"tabItem_Ymn6"};var r=s(74848);function i({children:e,hidden:n,className:s}){return(0,r.jsx)("div",{role:"tabpanel",className:(0,a.A)(t.tabItem,s),hidden:n,children:e})}},28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>o});var a=s(96540);const t={},r=a.createContext(t);function i(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),a.createElement(r.Provider,{value:n},e.children)}},56775:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/gasless-on-chain-signer-2c714ea423f8fe1eb7cb9939d8350bea.svg"},93897:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/gasless-gsn-flow-ce9d704c33063bf100cc9d483f696a95.jpg"}}]);