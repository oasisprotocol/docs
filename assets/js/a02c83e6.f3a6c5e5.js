"use strict";(globalThis.webpackChunkdocs_oasis_io=globalThis.webpackChunkdocs_oasis_io||[]).push([[6391],{28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>c});var o=s(96540);const t={},i=o.createContext(t);function a(e){const n=o.useContext(i);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),o.createElement(i.Provider,{value:n},e.children)}},38190:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"core/consensus/transactions","title":"Transactions","description":"The consensus layer uses a common transaction format for all transactions. As","source":"@site/docs/core/consensus/transactions.md","sourceDirName":"core/consensus","slug":"/core/consensus/transactions","permalink":"/core/consensus/transactions","draft":false,"unlisted":false,"editUrl":"https://github.com/oasisprotocol/oasis-core/edit/stable/24.2.x/docs/consensus/transactions.md","tags":[],"version":"current","lastUpdatedAt":1757571245000,"frontMatter":{"sidebar_custom_props":{}},"sidebar":"oasisCore","previous":{"title":"Consensus Layer","permalink":"/core/consensus/"},"next":{"title":"Services","permalink":"/core/consensus/services"}}');var t=s(74848),i=s(28453);const a={sidebar_custom_props:{tags:void 0}},c="Transactions",r={},d=[{value:"Format",id:"format",level:2},{value:"Fees",id:"fees",level:2},{value:"Gas",id:"gas",level:3},{value:"Gas Estimation",id:"gas-estimation",level:2},{value:"Submission",id:"submission",level:2}];function l(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"transactions",children:"Transactions"})}),"\n",(0,t.jsxs)(n.p,{children:["The consensus layer uses a common transaction format for all transactions. As\nwith other Oasis Core components, it tries to be independent of any concrete\n",(0,t.jsx)(n.a,{href:"/core/consensus/",children:"consensus backend"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["The transaction API definitions and helper methods for creating and verifying\ntransactions lives in ",(0,t.jsx)(n.a,{href:"https://github.com/oasisprotocol/oasis-core/tree/master/go/consensus/api/transaction/transaction.go",children:(0,t.jsx)(n.code,{children:"go/consensus/api/transaction"})}),". For more information\nyou can also check out the ",(0,t.jsx)(n.a,{href:"https://pkg.go.dev/github.com/oasisprotocol/oasis-core/go/consensus/api/transaction?tab=doc",children:"consensus backend API documentation"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"format",children:"Format"}),"\n",(0,t.jsxs)(n.p,{children:["Each (unsigned) transaction is represented by the following ",(0,t.jsx)(n.a,{href:"/core/encoding",children:"encoded"})," structure:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-golang",children:'type Transaction struct {\n    Nonce uint64 `json:"nonce"`\n    Fee   *Fee   `json:"fee,omitempty"`\n\n    Method string `json:"method"`\n    Body   any    `json:"body,omitempty"`\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Fields:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"nonce"})," is the current caller's nonce to prevent replays."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"fee"})," is an optional fee that the caller commits to paying to execute the\ntransaction."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"method"})," is the called method name. Method names are composed of two parts,\nthe component name and the method name, joined by a separator (",(0,t.jsx)(n.code,{children:"."}),"). For\nexample, ",(0,t.jsx)(n.code,{children:"staking.Transfer"})," is the method name of the staking service's\n",(0,t.jsx)(n.code,{children:"Transfer"})," method."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"body"})," is the method-specific body."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The actual transaction that is submitted to the consensus layer must be signed\nwhich means that it is wrapped into a ",(0,t.jsx)(n.a,{href:"/core/crypto#envelopes",children:"signed envelope"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/core/crypto#domain-separation",children:"Domain separation"})," context (+ ",(0,t.jsx)(n.a,{href:"/core/crypto#chain-domain-separation",children:"chain domain separation"}),"):"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"oasis-core/consensus: tx\n"})}),"\n",(0,t.jsx)(n.h2,{id:"fees",children:"Fees"}),"\n",(0,t.jsx)(n.p,{children:"As the consensus operations require resources to process, the consensus layer\ncharges fees to perform operations."}),"\n",(0,t.jsx)(n.h3,{id:"gas",children:"Gas"}),"\n",(0,t.jsxs)(n.p,{children:["Gas is an unsigned 64-bit integer denominated in ",(0,t.jsx)(n.em,{children:"gas units"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Different operations cost different amounts of gas as defined by the consensus\nparameters of the consensus component that implements the operation."}),"\n",(0,t.jsxs)(n.p,{children:["Transactions that require fees to process will include a ",(0,t.jsx)(n.code,{children:"fee"})," field to declare\nhow much the caller is willing to pay for fees.\nSpecifying an ",(0,t.jsx)(n.code,{children:"amount"})," (in base units) and ",(0,t.jsx)(n.code,{children:"gas"})," (in gas units) implicitly\ndefines a ",(0,t.jsx)(n.em,{children:"gas price"})," (price of one gas unit) as ",(0,t.jsx)(n.code,{children:"amount / gas"}),".\nConsensus validators may refuse to process operations with a gas price that is\ntoo low."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"gas"})," field defines the maximum amount of gas that can be used by an\noperation for which the fee has been included. In case an operation uses more\ngas, processing will be aborted and no state changes will take place."]}),"\n",(0,t.jsx)(n.p,{children:"Signing a transaction which includes a fee structure implicitly grants\npermission to withdraw the given amount of base units from the signer's account.\nIn case there is not enough balance in the account, the operation will fail."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-golang",children:'type Fee struct {\n    Amount quantity.Quantity `json:"amount"`\n    Gas    Gas               `json:"gas"`\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Fees are not refunded."}),"\n",(0,t.jsx)(n.p,{children:"Fields:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"amount"})," is the total fee amount (in base units) to be paid."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"gas"})," is the maximum gas that an operation can use."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"gas-estimation",children:"Gas Estimation"}),"\n",(0,t.jsxs)(n.p,{children:["As transactions need to provide the maximum amount of gas that can be consumed\nduring their execution, the caller may need to be able to estimate the amount of\ngas needed. In order to do that the consensus backend API includes a method\ncalled ",(0,t.jsx)(n.a,{href:"https://pkg.go.dev/github.com/oasisprotocol/oasis-core/go/consensus/api?tab=doc#ClientBackend.EstimateGas",children:(0,t.jsx)(n.code,{children:"EstimateGas"})})," for estimating gas."]}),"\n",(0,t.jsxs)(n.p,{children:["The implementation of gas estimation is ",(0,t.jsx)(n.a,{href:"/core/consensus/",children:"backend-specific"})," but usually involves\nsome kind of simulation of transaction execution to derive the maximum amount\nconsumed by execution."]}),"\n",(0,t.jsx)(n.h2,{id:"submission",children:"Submission"}),"\n",(0,t.jsxs)(n.p,{children:["Transactions can be submitted to the consensus layer by calling ",(0,t.jsx)(n.a,{href:"https://pkg.go.dev/github.com/oasisprotocol/oasis-core/go/consensus/api?tab=doc#ClientBackend.SubmitTx",children:(0,t.jsx)(n.code,{children:"SubmitTx"})})," and\nproviding a signed transaction."]}),"\n",(0,t.jsxs)(n.p,{children:["The consensus backend API provides a submission manager for cases where the\n",(0,t.jsx)(n.a,{href:"/core/crypto",children:"signer"})," is available and automatic gas estimation and nonce lookup is desired.\nIt is available via the ",(0,t.jsx)(n.a,{href:"https://pkg.go.dev/github.com/oasisprotocol/oasis-core/go/consensus/api?tab=doc#SignAndSubmitTx",children:(0,t.jsx)(n.code,{children:"SignAndSubmitTx"})})," function."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);