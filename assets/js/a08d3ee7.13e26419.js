"use strict";(globalThis.webpackChunkdocs_oasis_io=globalThis.webpackChunkdocs_oasis_io||[]).push([[4980],{15718:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"build/opl/opl-sdk/ping-example","title":"Ping Example","description":"Ping example with OPL SDK","source":"@site/docs/build/opl/opl-sdk/ping-example.md","sourceDirName":"build/opl/opl-sdk","slug":"/build/opl/opl-sdk/ping-example","permalink":"/build/opl/opl-sdk/ping-example","draft":false,"unlisted":false,"editUrl":"https://github.com/oasisprotocol/docs/edit/main/docs/build/opl/opl-sdk/ping-example.md","tags":[],"version":"current","lastUpdatedAt":1761867754000,"frontMatter":{"description":"Ping example with OPL SDK","sidebar_custom_props":{}},"sidebar":"developers","previous":{"title":"OPL SDK","permalink":"/build/opl/opl-sdk/"},"next":{"title":"Celer Inter-Chain Messaging (IM)","permalink":"/build/opl/celer/"}}');var i=s(74848),o=s(28453);const c={description:"Ping example with OPL SDK",sidebar_custom_props:{tags:void 0}},r="Ping Example",l={},d=[{value:"Overview Ping",id:"overview-ping",level:2},{value:"Contract Setup",id:"contract-setup",level:2},{value:"Key points",id:"key-points",level:3},{value:"Compiling the Contract",id:"compiling-the-contract",level:2},{value:"Deploying the Contract",id:"deploying-the-contract",level:2},{value:"Deploying Pong.sol on Sapphire Testnet",id:"deploying-pongsol-on-sapphire-testnet",level:3},{value:"Deploying Ping.sol on BSC Testnet",id:"deploying-pingsol-on-bsc-testnet",level:3},{value:"Executing Ping",id:"executing-ping",level:2},{value:"Checking execution",id:"checking-execution",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"ping-example",children:"Ping Example"})}),"\n",(0,i.jsxs)(n.p,{children:["This tutorial demonstrates how to send a cross-chain message using\n",(0,i.jsx)(n.a,{href:"/build/opl/opl-sdk/",children:"Oasis OPL"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"You'll learn how to:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Deploy a Host contract"}),"\n",(0,i.jsx)(n.li,{children:"Deploy a Enclave contract"}),"\n",(0,i.jsx)(n.li,{children:"Send a cross-chain message"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["We recommend using ",(0,i.jsx)(n.a,{href:"https://remix.ethereum.org/",children:"Remix"})," for an easy-to-follow experience.\nThe only prerequisite is a set-up Metamask account."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["If you're new to Remix, follow our basic guide for using Remix\n",(0,i.jsx)(n.a,{href:"/build/tools/remix",children:"here"}),"."]})}),"\n",(0,i.jsx)(n.h2,{id:"overview-ping",children:"Overview Ping"}),"\n",(0,i.jsxs)(n.p,{children:["In this example, you'll deploy a ",(0,i.jsx)(n.code,{children:"host"})," contract on ",(0,i.jsx)(n.em,{children:"BSC Testnet"})," and a ",(0,i.jsx)(n.code,{children:"enclave"}),"\ncontract on ",(0,i.jsx)(n.em,{children:"Sapphire Testnet"}),".\nYou'll then send a ",(0,i.jsx)(n.code,{children:"ping"})," from the host contract to the enclave contract,\nfacilitated by the OPL SDK.\nThe enclave contract will receive the ",(0,i.jsx)(n.code,{children:"ping"})," and emits an event with the\nmessage which was received."]}),"\n",(0,i.jsx)(n.h2,{id:"contract-setup",children:"Contract Setup"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Open ",(0,i.jsx)(n.a,{href:"https://remix.ethereum.org/",children:"Remix"})," and create a new file called ",(0,i.jsx)(n.code,{children:"Ping.sol"})]}),"\n",(0,i.jsx)(n.li,{children:"Paste the following Ping host contract into it:"}),"\n"]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:" Ping.sol Contract "}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-solidity",metastring:'title="Ping.sol" showLineNumbers',children:'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {Host, Result} from "@oasisprotocol/sapphire-contracts/contracts/OPL.sol";\n\ncontract Ping is Host {\n    event MessageReceived(bytes message);\n\n    constructor(address pong) Host(pong) {\n        registerEndpoint("pongMessage", _pongMessage);\n    }\n\n    function startPing (bytes calldata _message) external payable {\n        postMessage("ping", abi.encode(_message));\n    }\n\n    function _pongMessage(bytes calldata _args) internal returns (Result) {\n        (bytes memory message) = abi.decode((_args), (bytes));\n        emit MessageReceived(message);\n        return Result.Success;\n    }\n}\n'})})]}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsxs)(n.li,{children:["Create a new file called ",(0,i.jsx)(n.code,{children:"Pong.sol"})]}),"\n",(0,i.jsx)(n.li,{children:"Paste the following Pong enclave contract into it:"}),"\n"]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:" Pong.sol Contract "}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-solidity",metastring:'title="Pong.sol" showLineNumbers',children:'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {Enclave, Result, autoswitch} from "@oasisprotocol/sapphire-contracts/contracts/OPL.sol";\n\ncontract Pong is Enclave {\n    event MessageReceived(bytes message);\n\n    constructor(uint nonce, bytes32 chain) Enclave(computeAddress(msg.sender, nonce), autoswitch(chain)) {\n        registerEndpoint("ping", _pingMessage);\n    }\n\n    function _pingMessage(bytes calldata _args) internal returns (Result) {\n        (bytes memory message) = abi.decode((_args), (bytes));\n        emit MessageReceived(message);\n        return Result.Success;\n    }\n\n    function computeAddress(address _origin, uint _nonce) public pure returns (address) {\n        if (_nonce == 0x00) {\n            return address(uint160(uint256(keccak256(abi.encodePacked(\n                bytes1(0xd6), bytes1(0x94), _origin, bytes1(0x80)\n            )))));\n        }\n        if (_nonce <= 0x7f) {\n            return address(uint160(uint256(keccak256(abi.encodePacked(\n                bytes1(0xd6), bytes1(0x94), _origin, bytes1(uint8(_nonce))\n            )))));\n        }\n        if (_nonce <= 0xff) {\n            return address(uint160(uint256(keccak256(abi.encodePacked(\n                bytes1(0xd7), bytes1(0x94), _origin, bytes1(0x81), uint8(_nonce)\n            )))));\n        }\n        if (_nonce <= 0xffff) {\n            return address(uint160(uint256(keccak256(abi.encodePacked(\n                bytes1(0xd8), bytes1(0x94), _origin, bytes1(0x82), uint16(_nonce)\n            )))));\n        }\n        if (_nonce <= 0xffffff) {\n            return address(uint160(uint256(keccak256(abi.encodePacked(\n                bytes1(0xd9), bytes1(0x94), _origin, bytes1(0x83), uint24(_nonce)\n            )))));\n        }\n        return address(uint160(uint256(keccak256(abi.encodePacked(\n            bytes1(0xda), bytes1(0x94), _origin, bytes1(0x84), uint32(_nonce)\n        )))));\n    }\n}\n'})})]}),"\n",(0,i.jsx)(n.h3,{id:"key-points",children:"Key points"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Host"}),": OPL wrapper for outside contract."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Enclave"}),": OPL wrapper for the contract on Sapphire side."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"registerEndpoint"}),": Registers endpoints in an OPL managed map."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"postMessage"}),": Call registered endpoints."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"autoswitch"}),": Finds correct MessageBus address via chain name."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"compiling-the-contract",children:"Compiling the Contract"}),"\n",(0,i.jsxs)(n.p,{children:["For compatibility with Sapphire, compile the contract using compiler version\n",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"0.8.24"})})," and evm version ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"paris"})})," (under advanced configuration)."]}),"\n",(0,i.jsx)(n.h2,{id:"deploying-the-contract",children:"Deploying the Contract"}),"\n",(0,i.jsxs)(n.p,{children:["Deploy the Ping contract on ",(0,i.jsx)(n.code,{children:"BSC Testnet"})," and the Pong.sol contract on\n",(0,i.jsx)(n.code,{children:"Sapphire Testnet"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"deploying-pongsol-on-sapphire-testnet",children:"Deploying Pong.sol on Sapphire Testnet"}),"\n",(0,i.jsxs)(n.p,{children:["You'll deploy the contract on ",(0,i.jsx)(n.code,{children:"Sapphire Testnet"})," first to avoid switching chains\nback and forth."]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Obtain TEST tokens for ",(0,i.jsx)(n.code,{children:"Sapphire Testnet"})," from the ",(0,i.jsx)(n.a,{href:"https://faucet.testnet.oasis.io/",children:"Oasis faucet"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Get next nonce of your account from ",(0,i.jsx)(n.code,{children:"BSC Testnet"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["If you didn't do anything on ",(0,i.jsx)(n.em,{children:"BSC Testnet"})," yet this will ",(0,i.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Else you need to get your last nonce, e.g. by checking your account\naddress on ",(0,i.jsx)(n.a,{href:"https://testnet.bscscan.com/",children:"bscscan"})," and inspect the details\nof your latest transaction, and then add 1."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["In Metamask, switch to the ",(0,i.jsx)(n.code,{children:"Sapphire Testnet"})," network and select\n",(0,i.jsx)(n.code,{children:"Injected Provider - MetaMask"})," as the environment in Remix."]}),"\n",(0,i.jsxs)(n.li,{children:["Select the ",(0,i.jsx)(n.code,{children:"Pong.sol"})," contract."]}),"\n",(0,i.jsx)(n.li,{children:"Fill in the deployment parameters:"}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"nonce"})}),": ",(0,i.jsx)(n.code,{children:"0"})," (or next nonce as written above)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"chain"})}),": ",(0,i.jsx)(n.code,{children:"0x6273630000000000000000000000000000000000000000000000000000000000"}),"\n(bytes encoded ",(0,i.jsx)(n.code,{children:'"bsc"'}),")"]}),"\n"]}),"\n",(0,i.jsxs)(n.ol,{start:"6",children:["\n",(0,i.jsxs)(n.li,{children:["Deploy the contract on ",(0,i.jsx)(n.code,{children:"Sapphire Testnet"})]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"Copy the address of the deployed contract, you'll need it for the next step as\nRemix will remove the contract from the UI if you change the chain."})}),"\n",(0,i.jsx)(n.h3,{id:"deploying-pingsol-on-bsc-testnet",children:"Deploying Ping.sol on BSC Testnet"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Obtain BNB test token for ",(0,i.jsx)(n.code,{children:"BSC Testnet"})," from the ",(0,i.jsx)(n.a,{href:"https://www.bnbchain.org/en/testnet-faucet",children:"BNB faucet"})," or their\ndiscord."]}),"\n",(0,i.jsxs)(n.li,{children:["In MetaMask, switch to the ",(0,i.jsx)(n.code,{children:"BSC Testnet"})," network and select\n",(0,i.jsx)(n.code,{children:"Injected Provider - MetaMask"})," as the environment in Remix."]}),"\n",(0,i.jsxs)(n.li,{children:["Select the ",(0,i.jsx)(n.code,{children:"Ping.sol"})," contract."]}),"\n",(0,i.jsxs)(n.li,{children:["Fill in the contract address you just have deployed on ",(0,i.jsx)(n.code,{children:"Sapphire Testnet"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Deploy the contract on ",(0,i.jsx)(n.code,{children:"BSC Testnet"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"executing-ping",children:"Executing Ping"}),"\n",(0,i.jsx)(n.p,{children:"Now that you've deployed the contacts, you can send the ping message\ncross-chain."}),"\n",(0,i.jsxs)(n.p,{children:["You'll need the following parameter for ",(0,i.jsx)(n.code,{children:"startPing"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"_message"}),': The encoded message. e.g. "Hello from BSC" -\n',(0,i.jsx)(n.code,{children:"0x48656c6c6f2066726f6d20425343000000000000000000000000000000000000"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Additionally you'll have to pay a fee which you send as ",(0,i.jsx)(n.code,{children:"value"}),". For sending the\nping 0.001 tBNB (1000000 gwei) will be enough."]}),"\n",(0,i.jsxs)(n.p,{children:["Finally execute the function ",(0,i.jsx)(n.code,{children:"startPing"}),"."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["For the ",(0,i.jsx)(n.code,{children:"Sapphire Testnet"})," an executor is running to relay the messages every\nfew minutes. If you deploy on mainnet please refer to the ",(0,i.jsx)(n.a,{href:"/build/opl/celer/#executor",children:"Executor chapter"}),"."]})}),"\n",(0,i.jsx)(n.h2,{id:"checking-execution",children:"Checking execution"}),"\n",(0,i.jsxs)(n.p,{children:["To see if you successfully send a ping message cross-chain you can watch for\nnew transactions at the ",(0,i.jsx)(n.a,{href:"https://explorer.oasis.io/testnet/sapphire/address/0x9Bb46D5100d2Db4608112026951c9C965b233f4D",children:"MessageBus address"})," from Celer or your deployed\ncontract on ",(0,i.jsx)(n.code,{children:"Sapphire Testnet"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>r});var t=s(96540);const i={},o=t.createContext(i);function c(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);