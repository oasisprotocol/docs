"use strict";(globalThis.webpackChunkdocs_oasis_io=globalThis.webpackChunkdocs_oasis_io||[]).push([[2065],{28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var i=s(96540);const r={},t=i.createContext(r);function o(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:n},e.children)}},78224:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"build/tools/foundry","title":"Foundry","description":"A guide for Foundry","source":"@site/docs/build/tools/foundry.mdx","sourceDirName":"build/tools","slug":"/build/tools/foundry","permalink":"/build/tools/foundry","draft":false,"unlisted":false,"editUrl":"https://github.com/oasisprotocol/docs/edit/main/docs/build/tools/foundry.mdx","tags":[],"version":"current","lastUpdatedAt":1761867754000,"frontMatter":{"description":"A guide for Foundry","sidebar_custom_props":{}},"sidebar":"developers","previous":{"title":"Remix","permalink":"/build/tools/remix"},"next":{"title":"Build ParaTime","permalink":"/build/tools/build-paratime/"}}');var r=s(74848),t=s(28453);const o={description:"A guide for Foundry",sidebar_custom_props:{tags:void 0}},a="Foundry",l={},c=[{value:"Setup and Configuration",id:"setup-and-configuration",level:2},{value:"Installing Sapphire Foundry (Optional)",id:"installing-sapphire-foundry-optional",level:3},{value:"Sapphire-specific Tests",id:"sapphire-specific-tests",level:2},{value:"Precompiles",id:"precompiles",level:3},{value:"Encrypted Transactions and Calls",id:"encrypted-transactions-and-calls",level:3},{value:"<code>forge test</code>",id:"forge-test",level:3},{value:"Forge Script",id:"forge-script",level:2},{value:"Broadcasting transactions",id:"broadcasting-transactions",level:3},{value:"A Note on Fork testing",id:"a-note-on-fork-testing",level:3},{value:"Verification with Foundry",id:"verification-with-foundry",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"foundry",children:"Foundry"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/foundry-rs/foundry",children:"Foundry"})," is a smart contract development environment\nfor EVM-based chains. This guide will show you how to use Foundry to build,\ntest, and deploy smart contracts on Oasis Sapphire."]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["For comprehensive details about Foundry's features, consult the\n",(0,r.jsx)(n.a,{href:"https://book.getfoundry.sh/",children:"Foundry documentation"}),"."]})}),"\n",(0,r.jsx)(n.p,{children:"Foundry contains the following tools:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Forge"})," is a CLI ",(0,r.jsx)(n.a,{href:"https://book.getfoundry.sh/forge/",children:"tool"})," for building, testing,\nand deploying smart contracts.\nDue to integrated Revm it significantly increases runtime speed when testing."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Anvil"})," is a local development EVM ",(0,r.jsx)(n.a,{href:"https://book.getfoundry.sh/anvil/",children:"node"}),".\nIt is installed as part of Foundry, but currently cannot\nbe extended with Sapphire features."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Cast"})," is a ",(0,r.jsx)(n.a,{href:"https://book.getfoundry.sh/cast/",children:"CLI tool"})," for interacting with EVM nodes.\nIt uses RPC calls, so it can be used\nto interact with Sapphire nodes running the ",(0,r.jsx)(n.a,{href:"/node/web3",children:"Oasis Web3 gateway"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Chisel"})," is a Solidity ",(0,r.jsx)(n.a,{href:"https://book.getfoundry.sh/chisel/",children:"REPL"}),' (short for "read-eval-print loop")\nthat allows developers to write and test Solidity code snippets.\nIt provides an interactive environment for writing and executing\nSolidity code, as well as a set of built-in commands for working\nwith and debugging your code.']}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"setup-and-configuration",children:"Setup and Configuration"}),"\n",(0,r.jsx)(n.p,{children:"Follow the steps below to setup your project:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Install and run Foundryup:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"curl -L https://foundry.paradigm.xyz | bash\nfoundryup\nsource ~/.bashrc\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Create a new Forge project and move inside:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"forge init sapphire_demo\ncd sapphire_demo\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Sapphire Contracts"})," package contains\nhelper solidity contracts and libraries that enable convenient access to\non-chain data and precompiles (rng, signatures, on-chain encryption, etc.).\nAfter initializing the project, we can install the ",(0,r.jsx)(n.strong,{children:"Sapphire Contracts"}),"\npackage using Foundry package manager ",(0,r.jsx)(n.a,{href:"https://book.getfoundry.sh/projects/soldeer?highlight=soldeer#soldeer-as-a-package-manager",children:"Soldeer"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"forge soldeer install @oasisprotocol-sapphire-contracts~0.2.14\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"installing-sapphire-foundry-optional",children:"Installing Sapphire Foundry (Optional)"}),"\n",(0,r.jsx)(n.p,{children:"If you intend to use Sapphire features in Forge tests/scripts\nfollow this section."}),"\n",(0,r.jsxs)(n.p,{children:["Forge tests use ",(0,r.jsx)(n.a,{href:"https://github.com/bluealloy/revm",children:"Revm"}),", an EVM implementation which does not contain\n",(0,r.jsx)(n.a,{href:"../sapphire/ethereum",children:"Sapphire-specific features"}),".\nFor that reason, we have to install special Sapphire precompiles which are\navailable in the ",(0,r.jsx)(n.strong,{children:"Sapphire foundry"})," package."]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Install the ",(0,r.jsx)(n.strong,{children:"Sapphire Foundry"})," Soldeer package:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"forge soldeer install @oasisprotocol-sapphire-foundry~0.1.1\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Your foundry.toml file should now look like this:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'title="foundry.toml"',children:'[profile.default]\nsrc = "src"\nout = "out"\nlibs = ["lib", "dependencies"]\n// highlight-start\nffi = true\n\n[dependencies]\n"@oasisprotocol-sapphire-contracts" = "0.2.14"\n"@oasisprotocol-sapphire-foundry" = "0.1.1"\n// highlight-end\n'})}),"\n",(0,r.jsx)(n.p,{children:"Note:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ffi = true"})," enables ",(0,r.jsx)(n.code,{children:"vm.ffi()"})," (",(0,r.jsx)(n.a,{href:"https://book.getfoundry.sh/cheatcodes/ffi",children:"foreign function interface"}),")\nwhich is used to call rust bindings containing the precompile and\ndecryption logic"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'"dependencies"'})," lists the required project dependencies installed\nvia the Foundry package manager ",(0,r.jsx)(n.a,{href:"https://book.getfoundry.sh/projects/soldeer?highlight=soldeer#soldeer-as-a-package-manager",children:"Soldeer"})]}),"\n",(0,r.jsx)(n.li,{children:"(Alternative) You can also skip previous steps, copy the contents\nto your foundry.toml file and run:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"forge soldeer install\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Install rust toolchain (nightly):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\nrustup toolchain install nightly\nrustup default nightly\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Note: ",(0,r.jsx)(n.code,{children:"oasisprotocol-sapphire-foundry"})," relies on Oasis Sapphire\n",(0,r.jsx)(n.code,{children:"runtime-sdk"})," crate which requires nightly toolchain."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Install Sapphire precompiles:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"cd dependencies/@oasisprotocol-sapphire-foundry-0.1.1/precompiles\ncargo +nightly build --release\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"sapphire-specific-tests",children:"Sapphire-specific Tests"}),"\n",(0,r.jsxs)(n.p,{children:["Users who aren't familiar with confidential benefits of Sapphire\nshould take a moment to review the Ethereum ",(0,r.jsx)(n.a,{href:"../sapphire/ethereum",children:"comparison page"}),".\nThe ",(0,r.jsx)(n.code,{children:"@oasisprotocol-sapphire-foundry"})," package enables\ntesting with precompiles and encrypted calls."]}),"\n",(0,r.jsx)(n.h3,{id:"precompiles",children:"Precompiles"}),"\n",(0,r.jsx)(n.p,{children:"Sapphire precompiles are special precompiled contracts that\ncontain cryptographic primitives and enable confidential transactions.\nSince Foundry uses un-customized Revm, they are not available by default."}),"\n",(0,r.jsxs)(n.p,{children:["To enable them in Forge tests, add the ",(0,r.jsx)(n.strong,{children:"import"})," statement to your test file:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-solidity",children:'import {SapphireTest} from "@oasisprotocol-sapphire-foundry-0.1.1/BaseSapphireTest.sol";\n'})}),"\n",(0,r.jsxs)(n.p,{children:["and then inherit from ",(0,r.jsx)(n.code,{children:"SapphireTest"})," from ",(0,r.jsx)(n.code,{children:"BaseSapphireTest.sol"}),"\nand override the ",(0,r.jsx)(n.code,{children:"setUp()"})," function:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-solidity",children:"contract PrecompileTest is SapphireTest {\n   \n   function setUp() public override {\n      super.setUp();\n   }\n"})}),"\n",(0,r.jsx)(n.h3,{id:"encrypted-transactions-and-calls",children:"Encrypted Transactions and Calls"}),"\n",(0,r.jsxs)(n.p,{children:["Sapphire uses end-to-end encryption for confidential transactions and calls.\nThis means that the calldata is encrypted using the shared ",(0,r.jsx)(n.a,{href:"../sapphire/develop/concept",children:"key"}),".\nFor non-encrypted transactions, the process works same as on Ethereum.\nHowever, when testing for example ",(0,r.jsx)(n.a,{href:"../sapphire/develop/gasless",children:"gasless transactions"})," with Foundry,\nwe need to add a few things."]}),"\n",(0,r.jsx)(n.p,{children:"After deploying the precompiles in the previous step, we need to\nupdate our custom contract, encrypt the transaction and broadcast it."}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"SapphireDecryptor"})," is a special contract that implements decryption\nthrough the fallback function.\nWe need to inherit from it to enable decryption."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-solidity",children:'import {SapphireDecryptor} from "@oasisprotocol-sapphire-foundry-0.1.1/BinaryContracts.sol";\n\ncontract CustomContract is SapphireDecryptor {\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"https://github.com/oasisprotocol/sapphire-paratime/tree/main/examples/foundry",children:"examples/foundry"})," for this step to see\nhow to test encrypted gasless transaction."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"vm.broadcastRawTransaction(raw_tx)"})," to send the raw transaction."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"forge-test",children:(0,r.jsx)(n.code,{children:"forge test"})}),"\n",(0,r.jsxs)(n.p,{children:["To run tests add a new file in the ",(0,r.jsx)(n.code,{children:"tests/"})," directory. Run tests with:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"forge test\n"})}),"\n",(0,r.jsx)(n.admonition,{title:"Example: Foundry",type:"info",children:(0,r.jsxs)(n.p,{children:["Visit the Sapphire ParaTime repository to download the ",(0,r.jsx)(n.a,{href:"https://github.com/oasisprotocol/sapphire-paratime/tree/main/examples/foundry",children:"Foundry"}),"\nexample."]})}),"\n",(0,r.jsx)(n.h2,{id:"forge-script",children:"Forge Script"}),"\n",(0,r.jsxs)(n.p,{children:["To run a script add a new file in the ",(0,r.jsx)(n.code,{children:"scripts/"})," directory.\nRun scripts with:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"forge script\n"})}),"\n",(0,r.jsx)(n.h3,{id:"broadcasting-transactions",children:"Broadcasting transactions"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["When broadcasting to Mainnet/Testnet/Localnet we do\nnot use any imports and contracts described in the\n",(0,r.jsx)(n.a,{href:"#installing-sapphire-foundry-optional",children:"Installing Sapphire Foundry (Optional)"})]})}),"\n",(0,r.jsxs)(n.p,{children:["When running scripts, we may also want to deploy and test on\nLocalnet/Testnet/Mainnet using ",(0,r.jsx)(n.code,{children:"--broadcast"})," and ",(0,r.jsx)(n.code,{children:"--rpc-url"})," flags.\nThe issue with Foundry, when broadcasting\nForge ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"scripts"})})," is, that it only broadcasts state-changing transactions.\nThis means that none of ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"view calls"})})," are sent through the RPC node.\nThey are still executed in the local in-memory Revm even when\n",(0,r.jsx)(n.code,{children:"--broadcast"})," and ",(0,r.jsx)(n.code,{children:"--skip-simulation"})," flags are provided."]}),"\n",(0,r.jsxs)(n.p,{children:["Using Forge script we can deploy and broadcast transactions on Sapphire\njust like on Ethereum, but since most Sapphire features are enabled\nthrough precompile ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"view calls"})})," we then have to use ",(0,r.jsx)(n.code,{children:"vm.rpc()"}),"\ncheatcode to query data directly."]}),"\n",(0,r.jsxs)(n.p,{children:["This code contains Forge Script contract, that calls\n",(0,r.jsx)(n.strong,{children:"RANDOM_BYTES (0x0100000000000000000000000000000000000001)"})," precompile\ndirectly using ",(0,r.jsx)(n.code,{children:"vm.rpc()"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-solidity",children:'   contract CounterScript is Script {\n\n    function setUp() public {\n        vm.createSelectFork("https://testnet.sapphire.oasis.io");\n    }\n\n    function run() public {\n      vm.startBroadcast();\n      string memory transactionArgs = string.concat(\n         "[{\\"to\\":\\"", "0x0100000000000000000000000000000000000001",\n         "\\",\\"data\\":\\"", vm.toString(abi.encode(32, "")),\n         "\\"}, \\"latest\\"]"\n      );\n      bytes memory result = vm.rpc("eth_call", transactionArgs);\n      vm.stopBroadcast();\n    }\n   }\n'})}),"\n",(0,r.jsx)(n.h3,{id:"a-note-on-fork-testing",children:"A Note on Fork testing"}),"\n",(0,r.jsxs)(n.p,{children:["Due to encrypted state, it is not possible to fork Sapphire.\nUsing Forge with ",(0,r.jsx)(n.code,{children:"--fork-block-number"})," will not work."]}),"\n",(0,r.jsx)(n.h2,{id:"verification-with-foundry",children:"Verification with Foundry"}),"\n",(0,r.jsxs)(n.p,{children:["After contracts are deployed, you can verify them with Sourcify.\nCheck out the ",(0,r.jsx)(n.a,{href:"./verification/#verification-with-foundry",children:"Verification with Foundry"})," section for more details."]}),"\n",(0,r.jsxs)(n.p,{children:["Should you have any questions, do not hesitate to share them with us on the\n",(0,r.jsx)(n.a,{href:"https://oasis.io/discord",children:"#dev-central Discord channel"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);