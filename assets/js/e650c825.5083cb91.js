"use strict";(globalThis.webpackChunkdocs_oasis_io=globalThis.webpackChunkdocs_oasis_io||[]).push([[3967],{28453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>i});var t=s(96540);const a={},r=t.createContext(a);function c(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),t.createElement(r.Provider,{value:n},e.children)}},60969:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"build/rofl/features/secrets","title":"Secrets","description":"Sometimes containers need access to data that should not be disclosed publicly,","source":"@site/docs/build/rofl/features/secrets.md","sourceDirName":"build/rofl/features","slug":"/build/rofl/features/secrets","permalink":"/build/rofl/features/secrets","draft":false,"unlisted":false,"editUrl":"https://github.com/oasisprotocol/oasis-sdk/edit/main/docs/rofl/features/secrets.md","tags":[],"version":"current","lastUpdatedAt":1761563757000,"frontMatter":{"sidebar_custom_props":{}},"sidebar":"developers","previous":{"title":"Marketplace","permalink":"/build/rofl/features/marketplace"},"next":{"title":"Persistent Storage","permalink":"/build/rofl/features/storage"}}');var a=s(74848),r=s(28453);const c={sidebar_custom_props:{tags:void 0}},i="Secrets",o={},d=[{value:"Environment Variables",id:"environment-variables",level:2},{value:"Container Secrets",id:"container-secrets",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"secrets",children:"Secrets"})}),"\n",(0,a.jsxs)(n.p,{children:["Sometimes containers need access to data that should not be disclosed publicly,\nfor example API keys to access certain services. This data can be passed to\ncontainers running in ROFL via ",(0,a.jsx)(n.em,{children:"secrets"}),". Secrets are arbitrary key-value pairs\nwhich are end-to-end encrypted so that they can only be decrypted inside a\ncorrectly attested app."]}),"\n",(0,a.jsxs)(n.p,{children:["Secrets can be easily managed via the Oasis CLI, for example to create a secret\ncalled ",(0,a.jsx)(n.code,{children:"mysecret"})," you can use:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:'echo -n "my very secret value" | oasis rofl secret set mysecret -\n'})}),"\n",(0,a.jsx)(n.admonition,{title:"Detailed CLI Reference",type:"info",children:(0,a.jsxs)(n.p,{children:["For comprehensive documentation on secret management commands including\nimporting from ",(0,a.jsx)(n.code,{children:".env"})," files, removing secrets, and other advanced features,\nconsult the ",(0,a.jsx)(n.a,{href:"/build/tools/cli/rofl#secret",children:"Oasis CLI"})," documentation."]})}),"\n",(0,a.jsx)(n.p,{children:"Note that this only encrypts the secret and updates the local app manifest file,\nbut the secret is not propagated to the app just yet. This allows you to easily\nconfigure as many secrets as you want without the need to constantly update the\non-chain app configuration."}),"\n",(0,a.jsxs)(n.admonition,{type:"info",children:[(0,a.jsx)(n.p,{children:"While the secrets are stored in the local app manifest, this does not mean that\nthe manifest needs to remain private. The secret values inside the manifest are\nend-to-end encrypted and cannot be read even by the administrator who set them."}),(0,a.jsx)(n.p,{children:"When a secret is created, a new ephemeral key is generated that is used in the\nencryption process. The ephemeral key is then immediately discarded so only the\napp itself can decrypt the secret."})]}),"\n",(0,a.jsxs)(n.p,{children:["Updating the on-chain configuration can be performed via the usual ",(0,a.jsx)(n.code,{children:"update"}),"\ncommand as follows:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"oasis rofl update\n"})}),"\n",(0,a.jsx)(n.p,{children:"Inside containers secrets can be passed either via environment variables or via\ncontainer secrets."}),"\n",(0,a.jsx)(n.h2,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,a.jsxs)(n.p,{children:["Each secret is automatically exposed in the Compose environment and can be\ntrivially used in the Compose file. Note that when exposed as an environment\nvariable, the secret name is capitalized and spaces are replaced with\nunderscores, so a secret called ",(0,a.jsx)(n.code,{children:"my secret"})," will be available as ",(0,a.jsx)(n.code,{children:"MY_SECRET"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'services:\n  test:\n    image: docker.io/library/alpine:3.21.2@sha256:f3240395711384fc3c07daa46cbc8d73aa5ba25ad1deb97424992760f8cb2b94\n    command: echo "Hello $MYSECRET!"\n    environment:\n      - MYSECRET=${MYSECRET}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"container-secrets",children:"Container Secrets"}),"\n",(0,a.jsxs)(n.p,{children:["Each secret is also defined as a ",(0,a.jsx)(n.a,{href:"https://docs.docker.com/compose/how-tos/use-secrets/",children:"container secret"})," and can be passed to the\ncontainer as such. Note that the secret needs to be defined as an ",(0,a.jsx)(n.em,{children:"external"}),"\nsecret as it is created by the app during boot."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'services:\n  test:\n    image: docker.io/library/alpine:3.21.2@sha256:f3240395711384fc3c07daa46cbc8d73aa5ba25ad1deb97424992760f8cb2b94\n    command: echo "Hello $(cat /run/secrets/mysecret)!"\n    secrets:\n      - mysecret\n\nsecrets:\n  mysecret:\n    external: true\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);